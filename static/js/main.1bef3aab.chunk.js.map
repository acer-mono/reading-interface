{"version":3,"sources":["Chart/Chart.js","auth/index.js","api.js","ReadingForm/ReadingForm.js","CurrentReading/CurrentReading.js","views/CurrentReadingView/CurrentReadingView.js","redux/reducers/status.js","redux/reducers/editForms.js","redux/reducers/rooms.js","redux/actions/rooms.js","views/ChooseRoomView/ChooseRoomView.js","views/MainPage/MainPage.js","PrintPlot/PrintPlot.js","PrintTable/PrintTable.js","redux/reducers/users.js","UserForm/UserForm.js","redux/actions/users.js","RoomForm/RoomForm.js","Header/Header.js","LoginForm/LoginForm.js","Entity/Entity.js","EntityList/EntityList.js","SearchString/SearchString.js","views/EntityListView/EntityListView.js","views/RoomsView/RoomsView.js","views/UsersView/UsersView.js","redux/reducers/currentUser.js","redux/actions/currentUser.js","App.js","reportWebVitals.js","redux/index.js","index.js"],"names":["useStyles","makeStyles","custom","border","boxShadow","Chart","data","title","axisName","yAxis","theme","useTheme","classes","Card","className","CardHeader","titleTypographyProps","color","CardContent","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Label","angle","position","style","textAnchor","fill","primary","Line","type","main","dot","createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","r","json","useAuth","authFetch","login","logout","URL","defaultHeaders","handleErrors","response","a","status","Error","message","handleBinaryFilesErrors","api","users","get","headers","user","post","password","isAdmin","JSON","stringify","is_admin","put","id","delete","rooms","room","name","reading","temperature","humidity","readings","from","to","toISOString","split","plot","table","format","auth","validationSchema","yup","required","buttons","spacing","input","ReadingForm","open","changeHandler","updateReading","updateReadingList","useState","error","setError","styles","formik","useFormik","initialValues","onSubmit","values","catch","e","Dialog","aria-labelledby","DialogTitle","Alert","severity","handleSubmit","DialogContent","TextField","fullWidth","variant","label","value","onChange","handleChange","touched","Boolean","errors","helperText","InputLabelProps","shrink","inputProps","step","min","DialogActions","Button","onClick","CurrentReading","setOpen","Typography","component","CardActions","href","CurrentReadingView","Grid","container","direction","justify","item","statusSlice","createSlice","initialState","create","print","edit","reducers","setPlotStatus","state","action","payload","setTableStatus","setRoomStatus","setUserStatus","setCreate","setPrint","setEdit","actions","editFormSlice","openUser","closeUser","openRoom","closeRoom","roomsSlice","list","loadList","remove","filter","el","add","push","find","clearError","loadAsync","dispatch","console","log","ChooseRoomView","setRoomHandler","useSelector","store","useDispatch","useEffect","FormControl","InputLabel","Select","labelId","map","MenuItem","layout","breakpoints","up","marginLeft","marginRight","paper","marginTop","marginBottom","padding","stepper","display","justifyContent","button","MainPage","steps","roomId","setRoomId","undefined","current","setCurrent","setTemperature","setHumidity","React","activeStep","setActiveStep","Paper","align","Stepper","Step","StepLabel","Fragment","length","gutterBottom","target","isUpdate","currentDay","moment","date","Date","getStepContent","finally","setDate","getDate","PLOT_TYPES","h","t","th","PrintPlot","changeState","download","useRef","res","blob","window","createObjectURL","url","click","Object","entries","key","utils","DateFnsUtils","disableToolbar","clearable","val","setFieldValue","KeyboardButtonProps","isValid","dirty","ref","TABLE_FORMATS","pdf","xlsx","csv","PrintTable","usersSlice","UserForm","isCreation","FormControlLabel","control","Checkbox","defaultChecked","RoomForm","multiline","rows","aria-label","appBar","menuButton","background","outline","textTransform","Header","history","useHistory","currentUser","AppBar","Toolbar","IconButton","useCallback","fontSize","root","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","keepMounted","onClose","flexDirection","alignItems","avatar","backgroundColor","form","submit","LoginForm","Avatar","noValidate","autoComplete","autoFocus","size","Entity","fieldForRendering","deleteHandler","updateHandler","isEditUserOpen","editForms","isEditRoomOpen","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","edge","EntityList","items","List","maxHeight","overflowY","flex","iconButton","SearchString","filterItems","changeValue","InputBase","placeholder","defaultValue","EntityListView","fieldForSearching","changeFilter","toLowerCase","includes","RoomsView","roomLoadAsync","confirm","roomRemoveAsync","roomEdit","UsersView","usersRemoveAsync","userEdit","currentUserSlice","getUserAsync","PrivateRoute","Component","rest","logged","render","props","pathname","location","PrivateAdminRoute","HeaderWrapper","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","editFormsSlice","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bef3aab.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport { Card, CardHeader, CardContent, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  custom: {\n    border: 'none',\n    boxShadow: 'none'\n  }\n});\n\nexport default function Chart({ data, title, axisName, yAxis }) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.custom}>\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title={title} />\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={260}>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n              >\n                {axisName}\n              </Label>\n            </YAxis>\n            <Line type=\"monotone\" dataKey={yAxis} stroke={theme.palette.primary.main} dot={true} />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { createAuthProvider } from 'react-token-auth';\n\nexport const [useAuth, authFetch, login, logout] = createAuthProvider({\n  accessTokenKey: 'access_token',\n  onUpdateToken: token =>\n    fetch('/refresh', {\n      method: 'POST',\n      body: token.access_token\n    }).then(r => r.json())\n});\n","import { authFetch } from './auth';\n\nconst URL = 'https://vki.pythonanywhere.com';\n\nconst defaultHeaders = {\n  'Content-Type': 'application/json'\n};\n\nasync function handleErrors(response) {\n  const data = await response.json();\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nasync function handleBinaryFilesErrors(response) {\n  const data = await response;\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nconst api = {\n  users: {\n    get: () =>\n      authFetch(`${URL}/users`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  user: {\n    get: () =>\n      authFetch(`${URL}/user`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n\n    post: ({ login, password, isAdmin }) =>\n      authFetch(`${URL}/user`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    put: ({ id, login, password, isAdmin }) =>\n      authFetch(`${URL}/user`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    delete: id =>\n      authFetch(`${URL}/user`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  rooms: {\n    get: () =>\n      authFetch(`${URL}/rooms`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  room: {\n    post: name =>\n      authFetch(`${URL}/room`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          name\n        })\n      }).then(handleErrors),\n    put: ({ id, name }) =>\n      authFetch(`${URL}/room`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          name\n        })\n      }).then(handleErrors),\n    delete: id =>\n      authFetch(`${URL}/room`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  reading: {\n    get: room =>\n      authFetch(`${URL}/reading?room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n    post: ({ temperature, humidity, room }) =>\n      authFetch(`${URL}/reading`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors),\n    put: ({ temperature, humidity, room }) =>\n      authFetch(`${URL}/reading`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors)\n  },\n  readings: {\n    get: (room, from, to) =>\n      authFetch(\n        `${URL}/readings?from=${from.toISOString().split('T')[0]}&to=${\n          to.toISOString().split('T')[0]\n        }&room=${room}`,\n        {\n          method: 'GET',\n          headers: defaultHeaders\n        }\n      ).then(handleErrors)\n  },\n  plot: {\n    get: ({ from, to, room, type }) =>\n      authFetch(\n        `${URL}/plot?from=${from.toISOString().split('T')[0]}&to=${\n          to.toISOString().split('T')[0]\n        }&room=${room}&type=${type}`,\n        {\n          method: 'GET'\n        }\n      ).then(handleBinaryFilesErrors)\n  },\n  table: {\n    get: ({ format, from, to, room }) =>\n      authFetch(\n        `${URL}/table?from=${from.toISOString().split('T')[0]}&to=${\n          to.toISOString().split('T')[0]\n        }&room=${room}&format=${format}`,\n        {\n          method: 'GET'\n        }\n      ).then(handleBinaryFilesErrors)\n  },\n  auth: {\n    post: ({ login, password }) =>\n      fetch(`${URL}/login`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password\n        })\n      }).then(handleErrors)\n  }\n};\n\nexport default api;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as yup from 'yup';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport { Alert } from '@material-ui/lab';\n\nconst validationSchema = yup.object({\n  temperature: yup.number().required('Поле обязательно'),\n  humidity: yup.number().required('Поле обязательно')\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction ReadingForm({ open, changeHandler, reading, room, updateReading, updateReadingList }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      temperature: reading ? reading.temperature : 0,\n      humidity: reading ? reading.humidity : 0\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (!reading) {\n        api.reading\n          .post({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, false);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.reading\n          .put({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, true);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {reading && 'Изменениe'}\n          {!reading && 'Добавление'} показаний\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              className={styles.input}\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"temperature\"\n              name=\"temperature\"\n              label=\"Температура\"\n              type=\"number\"\n              value={formik.values.temperature}\n              onChange={formik.handleChange}\n              error={formik.touched.temperature && Boolean(formik.errors.temperature)}\n              helperText={formik.touched.temperature && formik.errors.temperature}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1\n              }}\n            />\n            <TextField\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"humidity\"\n              name=\"humidity\"\n              label=\"Влажность\"\n              type=\"number\"\n              value={formik.values.humidity}\n              onChange={formik.handleChange}\n              error={formik.touched.humidity && Boolean(formik.errors.humidity)}\n              helperText={formik.touched.humidity && formik.errors.humidity}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1,\n                min: 0\n              }}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {reading && 'Сохранить'}\n              {!reading && 'Добавить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReadingForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Card, CardContent, CardActions, CardHeader } from '@material-ui/core';\nimport ReadingForm from '../ReadingForm/ReadingForm';\n\nexport default function CurrentReading({ reading, room, updateReading, updateReadingList }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title=\"Текущие показания:\" />\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Температура:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.temperature}℃`}\n          {!reading && '-'}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Влажность:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.humidity}%`}\n          {!reading && '-'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" href=\"#\" onClick={() => setOpen(true)}>\n          {reading && 'Изменить'}\n          {!reading && 'Добавить'}\n        </Button>\n        <ReadingForm\n          room={room}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          reading={reading}\n          updateReading={updateReading}\n          updateReadingList={updateReadingList}\n        />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Chart from '../../Chart/Chart';\nimport CurrentReading from '../../CurrentReading/CurrentReading';\nimport { Grid } from '@material-ui/core';\n\nfunction CurrentReadingView({\n  reading,\n  room,\n  updateReading,\n  temperature,\n  humidity,\n  updateReadingList\n}) {\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"space-between\">\n        <Grid item>\n          <Chart\n            title=\"Температура\"\n            axisName=\"Температура(℃)\"\n            data={temperature}\n            yAxis=\"temperature\"\n          />\n          <Chart title=\"Влажность\" axisName=\"Влажность(%)\" data={humidity} yAxis=\"humidity\" />\n        </Grid>\n        <Grid item>\n          <CurrentReading\n            reading={reading}\n            room={room}\n            updateReadingList={updateReadingList}\n            updateReading={updateReading}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default CurrentReadingView;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: false,\n  room: false,\n  plot: false,\n  table: false,\n  create: false,\n  print: false,\n  edit: false\n};\n\nconst statusSlice = createSlice({\n  name: 'status',\n  initialState,\n  reducers: {\n    setPlotStatus(state, action) {\n      state.plot = action.payload;\n    },\n    setTableStatus(state, action) {\n      state.table = action.payload;\n    },\n    setRoomStatus(state, action) {\n      state.room = action.payload;\n    },\n    setUserStatus(state, action) {\n      state.user = action.payload;\n    },\n    setCreate(state, action) {\n      state.create = action.payload;\n    },\n    setPrint(state, action) {\n      state.print = action.payload;\n    },\n    setEdit(state, action) {\n      state.edit = action.payload;\n    }\n  }\n});\n\nexport const {\n  setPlotStatus,\n  setTableStatus,\n  setRoomStatus,\n  setUserStatus,\n  setCreate,\n  setPrint,\n  setEdit\n} = statusSlice.actions;\n\nexport default statusSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: '',\n  room: ''\n};\n\nconst editFormSlice = createSlice({\n  name: 'editForms',\n  initialState,\n  reducers: {\n    openUser(state, action) {\n      state.user = action.payload;\n    },\n    closeUser(state) {\n      state.user = '';\n    },\n    openRoom(state, action) {\n      state.room = action.payload;\n    },\n    closeRoom(state) {\n      state.room = '';\n    }\n  }\n});\n\nexport const { openUser, closeUser, openRoom, closeRoom } = editFormSlice.actions;\n\nexport default editFormSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  list: [],\n  error: ''\n};\n\nconst roomsSlice = createSlice({\n  name: 'rooms',\n  initialState,\n  reducers: {\n    loadList(state, action) {\n      return { ...state, list: action.payload };\n    },\n    remove(state, action) {\n      state.list = [...state.list.filter(el => el.id !== action.payload)];\n    },\n    add(state, action) {\n      state.list.push(action.payload);\n    },\n    edit(state, action) {\n      const room = state.list.find(room => room.id === action.payload.id);\n      room.name = action.payload.name;\n    },\n    clearError(state) {\n      state.error = '';\n    },\n    setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\n\nexport const { loadList, remove, edit, setError, clearError, add } = roomsSlice.actions;\n\nexport default roomsSlice.reducer;\n","import api from '../../api';\nimport { setRoomStatus } from '../reducers/status';\nimport { closeRoom } from '../reducers/editForms';\nimport { clearError, setError, edit, loadList, remove, add } from '../reducers/rooms';\n\nexport const editAsync = value => async dispatch => {\n  try {\n    dispatch(clearError());\n    await api.room.put(value);\n    dispatch(edit(value));\n    dispatch(closeRoom());\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const addAsync = name => async dispatch => {\n  try {\n    dispatch(clearError());\n    const item = await api.room.post(name);\n    dispatch(add(item));\n    dispatch(setRoomStatus(false));\n  } catch (e) {\n    dispatch(setError(e.message));\n    dispatch(setRoomStatus(true));\n  }\n};\n\nexport const loadAsync = () => async dispatch => {\n  try {\n    const list = await api.rooms.get();\n    dispatch(loadList(list));\n  } catch (e) {\n    console.log('Error load');\n  }\n};\n\nexport const removeAsync = id => async dispatch => {\n  try {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      await api.room.delete(id);\n      dispatch(remove(id));\n    }\n  } catch (e) {\n    console.log('Error remove');\n  }\n};\n","import React, { useEffect } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAsync } from '../../redux/actions/rooms';\n\nfunction ChooseRoomView({ setRoomHandler }) {\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n  return (\n    <>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"room-label\">Помещение</InputLabel>\n        <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\" onChange={setRoomHandler}>\n          {rooms.map(room => (\n            <MenuItem key={room.id} value={room.id}>\n              {room.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nexport default ChooseRoomView;\n","import React, { useState } from 'react';\nimport { Typography, Paper, Stepper, StepLabel, Step, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CurrentReadingView from '../CurrentReadingView/CurrentReadingView';\nimport ChooseRoomView from '../ChooseRoomView/ChooseRoomView';\nimport api from '../../api';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(900 + theme.spacing(2) * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MainPage() {\n  const classes = useStyles();\n  const steps = ['Выбор помещения', 'Ввод данных'];\n  const [roomId, setRoomId] = useState('');\n  const [current, setCurrent] = useState(undefined);\n  const [temperature, setTemperature] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    console.log(roomId);\n    api.reading\n      .get(roomId)\n      .then(reading => {\n        setCurrent(reading);\n      })\n      .catch(() => {\n        setCurrent(undefined);\n      })\n      .finally(() => {\n        api.readings\n          .get(roomId, new Date(new Date().setDate(new Date().getDate() - 6)), new Date())\n          .then(readings => {\n            console.log(new Date().getDate() - 7);\n            setTemperature(\n              readings.map(reading => {\n                return {\n                  date: moment(reading.date).format('DD.MM'),\n                  temperature: reading.temperature\n                };\n              })\n            );\n            setHumidity(\n              readings.map(reading => {\n                return { date: moment(reading.date).format('DD.MM'), humidity: reading.humidity };\n              })\n            );\n          });\n        setActiveStep(activeStep + 1);\n      });\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <ChooseRoomView\n            setRoomHandler={room => {\n              setRoomId(room.target.value);\n              setCurrent(undefined);\n            }}\n          />\n        );\n      case 1:\n        return (\n          <CurrentReadingView\n            reading={current}\n            room={roomId}\n            updateReading={value => setCurrent(value)}\n            temperature={temperature}\n            humidity={humidity}\n            updateReadingList={(value, isUpdate) => {\n              if (isUpdate) {\n                const currentDay = moment(current.date).format('DD.MM');\n                setHumidity(\n                  humidity.map(el => {\n                    if (el.date === currentDay) {\n                      el.humidity = value.humidity;\n                    }\n                    return el;\n                  })\n                );\n                setTemperature(\n                  temperature.map(el => {\n                    if (el.date === currentDay) {\n                      el.temperature = value.temperature;\n                    }\n                    return el;\n                  })\n                );\n              } else {\n                const currentDay = moment(new Date()).format('DD.MM');\n                humidity.push({ date: currentDay, humidity: value.humidity });\n                setHumidity([...humidity]);\n                temperature.push({ date: currentDay, temperature: value.temperature });\n                setTemperature([...temperature]);\n              }\n            }}\n          />\n        );\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Журнал учёта температурно-влажностного режима\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Назад\n                    </Button>\n                  )}\n                  {activeStep === 0 && roomId && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      Вперед\n                    </Button>\n                  )}\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default MainPage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert/Alert';\nimport { loadAsync } from '../redux/actions/rooms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst PLOT_TYPES = {\n  h: 'Влажность',\n  t: 'Температура',\n  th: 'Общий'\n};\n\nconst validationSchema = yup.object({\n  type: yup.string('Выберите тип').required('Тип обязателен'),\n  room: yup.string('Выберите помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintPlot({ open, changeState }) {\n  const styles = useStyles();\n  const [error, setError] = useState('');\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      type: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.plot\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = 'plot.png';\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать графика\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                id=\"room\"\n                label=\"Помещение\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Тип</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                id=\"type\"\n                label=\"Тип\"\n                name=\"type\"\n                value={formik.values.type}\n                onChange={formik.handleChange}\n                error={formik.touched.type && Boolean(formik.errors.type)}\n                helperText={formik.touched.type && formik.errors.type}\n              >\n                {Object.entries(PLOT_TYPES).map(([key, value]) => (\n                  <MenuItem key={key} value={key}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  label=\"Окончание наблюдений\"\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintPlot;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { loadAsync } from '../redux/actions/rooms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst TABLE_FORMATS = {\n  pdf: 'pdf',\n  xlsx: 'xlsx',\n  csv: 'csv'\n};\n\nconst validationSchema = yup.object({\n  format: yup.string('Выберете формат').required('Формат обязателен'),\n  room: yup.string('Выберете помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintTable({ open, changeState }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      format: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.table\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = `table.${formik.values.format}`;\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать таблицы\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                label=\"Помещение\"\n                id=\"room\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Формат</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                label=\"Формат\"\n                id=\"format\"\n                name=\"format\"\n                value={formik.values.format}\n                onChange={formik.handleChange}\n                error={formik.touched.format && Boolean(formik.errors.format)}\n                helperText={formik.touched.format && formik.errors.format}\n              >\n                {Object.entries(TABLE_FORMATS).map(([key, value]) => (\n                  <MenuItem key={key} value={value}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-between\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Окончание наблюдений\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintTable;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  list: [],\n  error: ''\n};\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    loadList(state, action) {\n      return { ...state, list: action.payload };\n    },\n    remove(state, action) {\n      state.list = [...state.list.filter(el => el.id !== action.payload)];\n    },\n    add(state, action) {\n      state.list.push(action.payload);\n    },\n    edit(state, action) {\n      const room = state.list.find(room => room.id === action.payload.id);\n      room.login = action.payload.login;\n    },\n    clearError(state) {\n      state.error = '';\n    },\n    setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\n\nexport const { loadList, remove, edit, setError, clearError, add } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Alert from '@material-ui/lab/Alert';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsync, editAsync } from '../redux/actions/users';\nimport { setUserStatus } from '../redux/reducers/status';\nimport { closeUser } from '../redux/reducers/editForms';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен'),\n  isAdmin: yup.bool(false)\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction UserForm({ open, isCreation, user }) {\n  const error = useSelector(store => store.users.error);\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      login: user ? user.login : '',\n      password: '',\n      isAdmin: user ? user.isAdmin : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (isCreation) {\n        dispatch(addAsync({ ...values }));\n      } else {\n        dispatch(editAsync({ id: user.id, ...values }));\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} пользователя\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              variant=\"outlined\"\n              className={styles.input}\n              margin=\"dense\"\n              id=\"login\"\n              name=\"login\"\n              label=\"Логин\"\n              type=\"text\"\n              value={formik.values.login}\n              onChange={formik.handleChange}\n              error={formik.touched.login && Boolean(formik.errors.login)}\n              helperText={formik.touched.login && formik.errors.login}\n              fullWidth\n            />\n            <TextField\n              className={styles.input}\n              variant=\"outlined\"\n              margin=\"dense\"\n              id=\"password\"\n              name=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"isAdmin\"\n                  color=\"primary\"\n                  defaultChecked={formik.values.isAdmin}\n                  onChange={formik.handleChange}\n                />\n              }\n              label=\"Администратор\"\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                if (isCreation) {\n                  dispatch(setUserStatus(false));\n                } else {\n                  dispatch(closeUser());\n                }\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UserForm;\n","import api from '../../api';\nimport { setUserStatus } from '../reducers/status';\nimport { closeUser } from '../reducers/editForms';\nimport { clearError, setError, edit, loadList, remove, add } from '../reducers/users';\nexport const editAsync = value => async dispatch => {\n  try {\n    dispatch(clearError());\n    await api.user.put(value);\n    dispatch(edit(value));\n    dispatch(closeUser());\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const addAsync = name => async dispatch => {\n  try {\n    dispatch(clearError());\n    const item = await api.user.post(name);\n    dispatch(add(item));\n    dispatch(setUserStatus(false));\n  } catch (e) {\n    dispatch(setError(e.message));\n    dispatch(setUserStatus(true));\n  }\n};\n\nexport const loadAsync = () => async dispatch => {\n  try {\n    const list = await api.users.get();\n    dispatch(loadList(list));\n  } catch (e) {\n    console.log('Error load');\n  }\n};\n\nexport const removeAsync = id => async dispatch => {\n  try {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      await api.user.delete(id);\n      dispatch(remove(id));\n    }\n  } catch (e) {\n    console.log('Error remove');\n  }\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsync, editAsync } from '../redux/actions/rooms';\nimport { setRoomStatus } from '../redux/reducers/status';\nimport { closeRoom } from '../redux/reducers/editForms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst validationSchema = yup.object({\n  name: yup.string('Введите название помещения').required('Название не может быт пустым')\n});\n\nfunction RoomForm({ open, isCreation, room }) {\n  const dispatch = useDispatch();\n  const error = useSelector(store => store.rooms.error);\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      name: room ? room.name : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (isCreation) {\n        dispatch(addAsync(values.name));\n      } else {\n        dispatch(editAsync({ id: room.id, name: values.name }));\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} помещения\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              multiline\n              rows={5}\n              id=\"name\"\n              label=\"Название помещения\"\n              name=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              aria-label=\"empty textarea\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                if (isCreation) {\n                  dispatch(setRoomStatus(false));\n                } else {\n                  dispatch(closeRoom());\n                }\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RoomForm;\n","import React, { useCallback } from 'react';\nimport { AppBar, Button, IconButton, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrintPlot from '../PrintPlot/PrintPlot';\nimport PrintTable from '../PrintTable/PrintTable';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setCreate,\n  setEdit,\n  setPlotStatus,\n  setPrint,\n  setRoomStatus,\n  setTableStatus,\n  setUserStatus\n} from '../redux/reducers/status';\nimport { logout } from '../auth';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    position: 'relative'\n  },\n  menuButton: {\n    background: 'none',\n    border: 'none',\n    outline: 'none',\n    color: 'white',\n    textTransform: 'uppercase'\n  }\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { room, user, table, plot, create, print, edit } = useSelector(store => store.status);\n  const currentUser = useSelector(store => store.currentUser.user);\n\n  const handleClickOpenPrintPlot = () => {\n    dispatch(setPrint(null));\n    dispatch(setPlotStatus(true));\n  };\n\n  const handleClickOpenPrintTable = () => {\n    dispatch(setPrint(null));\n    dispatch(setTableStatus(true));\n  };\n\n  const handleClickUserCreation = () => {\n    dispatch(setCreate(null));\n    dispatch(setUserStatus(true));\n  };\n\n  const handleClickRoomCreation = () => {\n    dispatch(setCreate(null));\n    dispatch(setRoomStatus(true));\n  };\n\n  return (\n    <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton onClick={useCallback(() => history.push('/reading-interface'), [history])}>\n          <HomeIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => dispatch(setPrint(event.currentTarget))}\n        >\n          Печать\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={print}\n          keepMounted\n          open={Boolean(print)}\n          onClose={() => dispatch(setPrint(null))}\n        >\n          <MenuItem onClick={handleClickOpenPrintTable}>Таблица</MenuItem>\n          <PrintTable open={table} changeState={value => dispatch(setTableStatus(value))} />\n          <MenuItem onClick={handleClickOpenPrintPlot}>График</MenuItem>\n          <PrintPlot open={plot} changeState={value => dispatch(setPlotStatus(value))} />\n        </Menu>\n        {currentUser.isAdmin && (\n          <>\n            <Button\n              classes={{\n                root: classes.menuButton\n              }}\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={event => dispatch(setCreate(event.currentTarget))}\n            >\n              Создание\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={create}\n              keepMounted\n              open={Boolean(create)}\n              onClose={() => dispatch(setCreate(null))}\n            >\n              <MenuItem onClick={handleClickUserCreation}>Пользователь</MenuItem>\n              <UserForm isCreation={true} open={Boolean(user)} />\n              <MenuItem onClick={handleClickRoomCreation}>Помещение</MenuItem>\n              <RoomForm isCreation={true} open={Boolean(room)} />\n            </Menu>\n            <Button\n              classes={{\n                root: classes.menuButton\n              }}\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={event => dispatch(setEdit(event.currentTarget))}\n            >\n              Редактирование\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={edit}\n              keepMounted\n              open={Boolean(edit)}\n              onClose={() => dispatch(setEdit(null))}\n            >\n              <MenuItem\n                onClick={() => {\n                  dispatch(setEdit(null));\n                  history.push('/reading-interface/users');\n                }}\n              >\n                Пользователь\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  dispatch(setEdit(null));\n                  history.push('/reading-interface/rooms');\n                }}\n              >\n                Помещение\n              </MenuItem>\n            </Menu>\n          </>\n        )}\n        <IconButton onClick={() => logout()}>\n          <ExitToAppIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { Avatar, Typography, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport api from '../api';\nimport { login } from '../auth';\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен')\n});\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#be392a'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction LoginForm() {\n  const classes = useStyles();\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      login: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      setError('');\n      try {\n        const data = await api.auth.post(values);\n        if (data.access_token) {\n          login(data);\n          history.push('/reading-interface');\n        } else {\n          setError('Please type in correct username/password');\n        }\n      } catch (e) {\n        setError(e.message);\n      }\n    }\n  });\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <FingerprintIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Вход в систему\n      </Typography>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      <form noValidate onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"login\"\n          label=\"Логин\"\n          name=\"login\"\n          autoComplete=\"login\"\n          value={formik.values.login}\n          onChange={formik.handleChange}\n          error={formik.touched.login && Boolean(formik.errors.login)}\n          helperText={formik.touched.login && formik.errors.login}\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          id=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          autoComplete=\"current-password\"\n        />\n        <Button\n          className={classes.submit}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          Войти\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openRoom, openUser } from '../redux/reducers/editForms';\n\nfunction Entity({ item, fieldForRendering, deleteHandler, updateHandler }) {\n  const dispatch = useDispatch();\n  const isEditUserOpen = useSelector(store => store.editForms.user);\n  const isEditRoomOpen = useSelector(store => store.editForms.room);\n  return (\n    <ListItem>\n      {fieldForRendering === 'login' && (\n        <UserForm\n          isCreation={false}\n          user={item}\n          open={isEditUserOpen === item.id}\n          updateHandler={updateHandler}\n        />\n      )}\n      {fieldForRendering === 'name' && (\n        <RoomForm isCreation={false} room={item} open={isEditRoomOpen === item.id} />\n      )}\n      <ListItemAvatar>\n        <Avatar>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={item[fieldForRendering]} />\n      <ListItemSecondaryAction>\n        {fieldForRendering === 'login' && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(openUser(item.id))}>\n            <EditIcon />\n          </IconButton>\n        )}\n        {fieldForRendering === 'name' && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(openRoom(item.id))}>\n            <EditIcon />\n          </IconButton>\n        )}\n        {item.readings.length === 0 && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteHandler(item.id)}>\n            <DeleteIcon />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Entity;\n","import React from 'react';\nimport Entity from '../Entity/Entity';\nimport { List, Typography } from '@material-ui/core';\n\nfunction EntityList({ items, fieldForRendering, deleteHandler, updateHandler }) {\n  if (items.length === 0) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        Ничего не найдено\n      </Typography>\n    );\n  } else {\n    return (\n      <List style={{ maxHeight: '60vh', overflowY: 'scroll' }}>\n        {items.map(item => (\n          <Entity\n            item={item}\n            key={item.id}\n            fieldForRendering={fieldForRendering}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default EntityList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nfunction SearchString({ filterItems }) {\n  const classes = useStyles();\n  const [value, changeValue] = useState();\n\n  function changeHandler(event) {\n    filterItems(event.target.value);\n    changeValue(event.target.value);\n  }\n\n  return (\n    <Paper variant=\"outlined\" component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Введите данные для поиска\"\n        inputProps={{ 'aria-label': 'Введите данные для поиска' }}\n        defaultValue={value}\n        onChange={changeHandler}\n      />\n      <SearchIcon color=\"disabled\" className={classes.iconButton} />\n    </Paper>\n  );\n}\n\nexport default SearchString;\n","import React, { useState } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EntityList from '../../EntityList/EntityList';\nimport SearchString from '../../SearchString/SearchString';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  }\n}));\n\nfunction EntityListView({ items, fieldForSearching, title, deleteHandler, updateHandler }) {\n  const classes = useStyles();\n  const [filter, changeFilter] = useState('');\n\n  function changeFilterHandler(value) {\n    changeFilter(value);\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            {title}\n          </Typography>\n          <SearchString filterItems={changeFilterHandler} />\n          <EntityList\n            items={items.filter(el =>\n              el[fieldForSearching].toLowerCase().includes(filter.toLowerCase())\n            )}\n            fieldForRendering={fieldForSearching}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default EntityListView;\n","import React from 'react';\nimport EntityListView from '../EntityListView/EntityListView';\nimport { edit as roomEdit } from '../../redux/reducers/users';\nimport {\n  loadAsync as roomLoadAsync,\n  removeAsync as roomRemoveAsync\n} from '../../redux/actions/rooms';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const RoomsView = () => {\n  const dispatch = useDispatch();\n  const rooms = useSelector(store => store.rooms.list);\n\n  useEffect(async () => {\n    dispatch(roomLoadAsync());\n  }, []);\n\n  return (\n    <EntityListView\n      items={rooms}\n      fieldForSearching=\"name\"\n      title=\"Помещения\"\n      deleteHandler={id => dispatch(roomRemoveAsync(id))}\n      updateHandler={room => roomEdit(room)}\n    />\n  );\n};\n","import React from 'react';\nimport EntityListView from '../EntityListView/EntityListView';\nimport {\n  loadAsync as usersLoadAsync,\n  removeAsync as usersRemoveAsync\n} from '../../redux/actions/users';\nimport { edit as userEdit } from '../../redux/reducers/rooms';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const UsersView = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(store => store.users.list);\n\n  useEffect(async () => {\n    dispatch(usersLoadAsync());\n  }, []);\n\n  return (\n    <EntityListView\n      items={users}\n      fieldForSearching=\"login\"\n      title=\"Пользователи\"\n      deleteHandler={id => dispatch(usersRemoveAsync(id))}\n      updateHandler={user => userEdit(user)}\n    />\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: {}\n};\n\nconst currentUserSlice = createSlice({\n  name: 'currentUser',\n  initialState,\n  reducers: {\n    get(state, action) {\n      state.user = action.payload;\n    }\n  }\n});\n\nexport const { get } = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n","import api from '../../api';\nimport { get } from '../reducers/currentUser';\n\nexport const getUserAsync = () => async dispatch => {\n  try {\n    const data = await api.user.get();\n    dispatch(get(data));\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport MainPage from './views/MainPage/MainPage';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './Header/Header';\nimport LoginForm from './LoginForm/LoginForm';\nimport { useAuth } from './auth';\nimport { RoomsView } from './views/RoomsView/RoomsView';\nimport { UsersView } from './views/UsersView/UsersView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserAsync } from './redux/actions/currentUser';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/reading-interface/login\" component={() => <LoginForm />} />\n        <PrivateRoute\n          exact\n          path=\"/reading-interface\"\n          component={() => <HeaderWrapper component={MainPage} />}\n        />\n        <PrivateAdminRoute\n          exact\n          path=\"/reading-interface/users\"\n          component={() => <HeaderWrapper component={UsersView} />}\n        />\n        <PrivateAdminRoute\n          exact\n          path=\"/reading-interface/rooms\"\n          component={() => <HeaderWrapper component={RoomsView} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        logged ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/reading-interface/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport const PrivateAdminRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n  const user = useSelector(store => store.currentUser.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        logged && user.isAdmin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/reading-interface/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport const HeaderWrapper = ({ component: Component, ...props }) => {\n  return (\n    <>\n      <Header />\n      <Component {...props} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport statusSlice from './reducers/status';\nimport currentUserSlice from './reducers/currentUser';\nimport editFormsSlice from './reducers/editForms';\nimport roomsSlice from './reducers/rooms';\nimport usersSlice from './reducers/users';\n\nconst store = configureStore({\n  reducer: {\n    rooms: roomsSlice,\n    users: usersSlice,\n    status: statusSlice,\n    currentUser: currentUserSlice,\n    editForms: editFormsSlice\n  }\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}