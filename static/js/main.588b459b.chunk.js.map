{"version":3,"sources":["Chart/Chart.js","auth/index.js","api.js","ReadingForm/ReadingForm.js","CurrentReading/CurrentReading.js","views/CurrentReadingView/CurrentReadingView.js","redux/actions/status.js","redux/actions/editForms.js","redux/actions/rooms.js","views/ChooseRoomView/ChooseRoomView.js","views/MainPage/MainPage.js","PrintPlot/PrintPlot.js","PrintTable/PrintTable.js","redux/actions/users.js","UserForm/UserForm.js","RoomForm/RoomForm.js","Header/Header.js","LoginForm/LoginForm.js","Entity/Entity.js","EntityList/EntityList.js","SearchString/SearchString.js","views/EntityListView/EntityListView.js","views/RoomsView/RoomsView.js","views/UsersView/UsersView.js","redux/actions/currentUser.js","App.js","reportWebVitals.js","redux/reducers/rooms.js","redux/reducers/users.js","redux/reducers/status.js","redux/reducers/currentUser.js","redux/reducers/editForms.js","redux/reducers/index.js","redux/index.js","index.js"],"names":["useStyles","makeStyles","custom","border","boxShadow","Chart","data","title","axisName","yAxis","theme","useTheme","classes","Card","className","CardHeader","titleTypographyProps","color","CardContent","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Label","angle","position","style","textAnchor","fill","primary","Line","type","main","dot","createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","r","json","useAuth","authFetch","login","logout","URL","defaultHeaders","handleErrors","response","a","status","Error","message","handleBinaryFilesErrors","api","users","get","headers","user","post","password","isAdmin","JSON","stringify","is_admin","put","id","delete","rooms","room","name","reading","temperature","humidity","readings","from","to","plot","toISOString","split","table","format","toLocaleDateString","auth","validationSchema","yup","required","buttons","spacing","input","ReadingForm","open","changeHandler","updateReading","updateReadingList","useState","error","setError","styles","formik","useFormik","initialValues","onSubmit","values","catch","e","Dialog","aria-labelledby","DialogTitle","Alert","severity","handleSubmit","DialogContent","TextField","fullWidth","variant","label","value","onChange","handleChange","touched","Boolean","errors","helperText","InputLabelProps","shrink","inputProps","step","min","DialogActions","Button","onClick","CurrentReading","setOpen","Typography","component","CardActions","href","CurrentReadingView","Grid","container","direction","justify","item","statusActionTypes","setUserStatus","payload","setRoomStatus","setPlotStatus","setTableStatus","setCreate","setPrint","setEdit","editFormsActionTypes","closeUser","closeRoom","roomsActionTypes","clearError","load","list","remove","edit","loadAsync","dispatch","console","log","ChooseRoomView","setRoomHandler","useSelector","store","useDispatch","useEffect","FormControl","InputLabel","Select","labelId","map","MenuItem","layout","breakpoints","up","marginLeft","marginRight","paper","marginTop","marginBottom","padding","stepper","display","justifyContent","button","MainPage","steps","roomId","setRoomId","undefined","current","setCurrent","setTemperature","setHumidity","React","activeStep","setActiveStep","Paper","align","Stepper","Step","StepLabel","Fragment","length","gutterBottom","target","isUpdate","currentDay","moment","date","el","Date","push","getStepContent","finally","PLOT_TYPES","h","t","th","PrintPlot","changeState","download","useRef","res","blob","window","createObjectURL","url","click","Object","entries","key","utils","DateFnsUtils","disableToolbar","clearable","val","setFieldValue","KeyboardButtonProps","isValid","dirty","ref","TABLE_FORMATS","pdf","xlsx","csv","PrintTable","usersActionTypes","UserForm","isCreation","FormControlLabel","control","Checkbox","defaultChecked","RoomForm","multiline","rows","aria-label","appBar","menuButton","background","outline","textTransform","Header","history","useHistory","create","print","currentUser","AppBar","Toolbar","IconButton","useCallback","fontSize","root","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","keepMounted","onClose","flexDirection","alignItems","avatar","backgroundColor","form","submit","LoginForm","Avatar","noValidate","autoComplete","autoFocus","size","Entity","fieldForRendering","deleteHandler","updateHandler","isEditUserOpen","editForms","isEditRoomOpen","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","edge","EntityList","items","List","maxHeight","overflowY","flex","iconButton","SearchString","filterItems","changeValue","InputBase","placeholder","defaultValue","EntityListView","fieldForSearching","filter","changeFilter","includes","RoomsView","roomLoadAsync","confirm","roomRemoveAsync","roomEdit","UsersView","usersRemoveAsync","userEdit","currentUserActionTypes","getUserAsync","PrivateRoute","Component","rest","logged","render","props","pathname","state","location","PrivateAdminRoute","HeaderWrapper","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","roomsInitialStore","roomsReducer","action","usersInitialStore","usersReducer","statusInitialStore","statusReducer","currentUserInitialStore","currentUserReducer","editFormsInitialStore","editFormsReducer","rootReducer","combineReducers","createRootReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.588b459b.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport { Card, CardHeader, CardContent, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  custom: {\n    border: 'none',\n    boxShadow: 'none'\n  }\n});\n\nexport default function Chart({ data, title, axisName, yAxis }) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.custom}>\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title={title} />\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={260}>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n              >\n                {axisName}\n              </Label>\n            </YAxis>\n            <Line type=\"monotone\" dataKey={yAxis} stroke={theme.palette.primary.main} dot={true} />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { createAuthProvider } from 'react-token-auth';\n\nexport const [useAuth, authFetch, login, logout] = createAuthProvider({\n  accessTokenKey: 'access_token',\n  onUpdateToken: token =>\n    fetch('/refresh', {\n      method: 'POST',\n      body: token.access_token\n    }).then(r => r.json())\n});\n","import { authFetch } from './auth';\n\nconst URL = 'https://vki.pythonanywhere.com';\n\nconst defaultHeaders = {\n  'Content-Type': 'application/json'\n};\n\nasync function handleErrors(response) {\n  const data = await response.json();\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nasync function handleBinaryFilesErrors(response) {\n  const data = await response;\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nconst api = {\n  users: {\n    get: () =>\n      authFetch(`${URL}/users`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  user: {\n    get: () =>\n      authFetch(`${URL}/user`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n\n    post: ({ login, password, isAdmin }) =>\n      authFetch(`${URL}/user`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    put: ({ id, login, password, isAdmin }) =>\n      authFetch(`${URL}/user`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    delete: id =>\n      authFetch(`${URL}/user`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  rooms: {\n    get: () =>\n      authFetch(`${URL}/rooms`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  room: {\n    post: name =>\n      authFetch(`${URL}/room`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          name\n        })\n      }).then(handleErrors),\n    put: ({ id, name }) =>\n      authFetch(`${URL}/room`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          name\n        })\n      }).then(handleErrors),\n    delete: id =>\n      authFetch(`${URL}/room`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  reading: {\n    get: room =>\n      authFetch(`${URL}/reading?room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n    post: ({ temperature, humidity, room }) =>\n      authFetch(`${URL}/reading`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors),\n    put: ({ temperature, humidity, room }) =>\n      authFetch(`${URL}/reading`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors)\n  },\n  readings: {\n    get: (room, from, to) =>\n      authFetch(`${URL}/readings?from=${from}&to=${to}&room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  plot: {\n    get: ({ from, to, room, type }) =>\n      authFetch(\n        `${URL}/plot?from=${from.toISOString().split('T')[0]}&to=${\n          to.toISOString().split('T')[0]\n        }&room=${room}&type=${type}`,\n        {\n          method: 'GET'\n        }\n      ).then(handleBinaryFilesErrors)\n  },\n  table: {\n    get: ({ format, from, to, room }) =>\n      authFetch(\n        `${URL}/table?from=${from.toLocaleDateString()}&to=${to.toLocaleDateString()}&room=${room}&format=${format}`,\n        {\n          method: 'GET'\n        }\n      ).then(handleBinaryFilesErrors)\n  },\n  auth: {\n    post: ({ login, password }) =>\n      fetch(`${URL}/login`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password\n        })\n      }).then(handleErrors)\n  }\n};\n\nexport default api;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as yup from 'yup';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport { Alert } from '@material-ui/lab';\n\nconst validationSchema = yup.object({\n  temperature: yup.number().required('Поле обязательно'),\n  humidity: yup.number().required('Поле обязательно')\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction ReadingForm({ open, changeHandler, reading, room, updateReading, updateReadingList }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      temperature: reading ? reading.temperature : 0,\n      humidity: reading ? reading.humidity : 0\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (!reading) {\n        api.reading\n          .post({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, false);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.reading\n          .put({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, true);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {reading && 'Изменениe'}\n          {!reading && 'Добавление'} показаний\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              className={styles.input}\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"temperature\"\n              name=\"temperature\"\n              label=\"Температура\"\n              type=\"number\"\n              value={formik.values.temperature}\n              onChange={formik.handleChange}\n              error={formik.touched.temperature && Boolean(formik.errors.temperature)}\n              helperText={formik.touched.temperature && formik.errors.temperature}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1\n              }}\n            />\n            <TextField\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"humidity\"\n              name=\"humidity\"\n              label=\"Влажность\"\n              type=\"number\"\n              value={formik.values.humidity}\n              onChange={formik.handleChange}\n              error={formik.touched.humidity && Boolean(formik.errors.humidity)}\n              helperText={formik.touched.humidity && formik.errors.humidity}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1,\n                min: 0\n              }}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {reading && 'Сохранить'}\n              {!reading && 'Добавить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReadingForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Card, CardContent, CardActions, CardHeader } from '@material-ui/core';\nimport ReadingForm from '../ReadingForm/ReadingForm';\n\nexport default function CurrentReading({ reading, room, updateReading, updateReadingList }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title=\"Текущие показания:\" />\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Температура:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.temperature}℃`}\n          {!reading && '-'}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Влажность:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.humidity}%`}\n          {!reading && '-'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" href=\"#\" onClick={() => setOpen(true)}>\n          {reading && 'Изменить'}\n          {!reading && 'Добавить'}\n        </Button>\n        <ReadingForm\n          room={room}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          reading={reading}\n          updateReading={updateReading}\n          updateReadingList={updateReadingList}\n        />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Chart from '../../Chart/Chart';\nimport CurrentReading from '../../CurrentReading/CurrentReading';\nimport { Grid } from '@material-ui/core';\n\nfunction CurrentReadingView({\n  reading,\n  room,\n  updateReading,\n  temperature,\n  humidity,\n  updateReadingList\n}) {\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"space-between\">\n        <Grid item>\n          <Chart\n            title=\"Температура\"\n            axisName=\"Температура(℃)\"\n            data={temperature}\n            yAxis=\"temperature\"\n          />\n          <Chart title=\"Влажность\" axisName=\"Влажность(%)\" data={humidity} yAxis=\"humidity\" />\n        </Grid>\n        <Grid item>\n          <CurrentReading\n            reading={reading}\n            room={room}\n            updateReadingList={updateReadingList}\n            updateReading={updateReading}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default CurrentReadingView;\n","export const statusActionTypes = {\n  setUserStatus: 'status/user',\n  setRoomStatus: 'status/room',\n  setTableStatus: 'status/table',\n  setPlotStatus: 'status/plot',\n  setCreate: 'status/create',\n  setPrint: 'status/print',\n  setEdit: 'status/edit'\n};\n\nexport const setUserStatus = status => ({\n  type: statusActionTypes.setUserStatus,\n  payload: status\n});\n\nexport const setRoomStatus = status => ({\n  type: statusActionTypes.setRoomStatus,\n  payload: status\n});\n\nexport const setPlotStatus = status => ({\n  type: statusActionTypes.setPlotStatus,\n  payload: status\n});\n\nexport const setTableStatus = status => ({\n  type: statusActionTypes.setTableStatus,\n  payload: status\n});\n\nexport const setCreate = status => ({\n  type: statusActionTypes.setCreate,\n  payload: status\n});\n\nexport const setPrint = status => ({\n  type: statusActionTypes.setPrint,\n  payload: status\n});\n\nexport const setEdit = status => ({\n  type: statusActionTypes.setEdit,\n  payload: status\n});\n","export const editFormsActionTypes = {\n  openUser: 'editForms/openUser',\n  openRoom: 'editForms/openRoom',\n  closeUser: 'editForms/closeUser',\n  closeRoom: 'editForms/closeRoom'\n};\n\nexport const openUser = id => ({\n  type: editFormsActionTypes.openUser,\n  payload: id\n});\n\nexport const closeUser = () => ({\n  type: editFormsActionTypes.closeUser\n});\n\nexport const openRoom = id => ({\n  type: editFormsActionTypes.openRoom,\n  payload: id\n});\n\nexport const closeRoom = () => ({\n  type: editFormsActionTypes.closeRoom\n});\n","import api from '../../api';\nimport { setRoomStatus } from './status';\nimport { closeRoom } from './editForms';\n\nexport const roomsActionTypes = {\n  edit: 'rooms/edit',\n  add: 'rooms/add',\n  delete: 'rooms/delete',\n  loadList: 'rooms/load',\n  setError: 'rooms/setError',\n  clearError: 'rooms/clearError'\n};\n\nexport const setError = error => ({\n  type: roomsActionTypes.setError,\n  payload: error\n});\n\nexport const clearError = () => ({\n  type: roomsActionTypes.clearError\n});\n\nexport const load = list => ({\n  type: roomsActionTypes.loadList,\n  payload: list\n});\n\nexport const remove = id => ({\n  type: roomsActionTypes.delete,\n  payload: id\n});\n\nexport const edit = item => ({\n  type: roomsActionTypes.edit,\n  payload: item\n});\n\nexport const add = room => ({\n  type: roomsActionTypes.add,\n  payload: room\n});\n\nexport const editAsync = value => async dispatch => {\n  try {\n    dispatch(clearError());\n    await api.room.put(value);\n    dispatch(edit(value));\n    dispatch(closeRoom());\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const addAsync = name => async dispatch => {\n  try {\n    dispatch(clearError());\n    const item = await api.room.post(name);\n    dispatch(add(item));\n    dispatch(setRoomStatus(false));\n  } catch (e) {\n    dispatch(setError(e.message));\n    dispatch(setRoomStatus(true));\n  }\n};\n\nexport const loadAsync = () => async dispatch => {\n  try {\n    const list = await api.rooms.get();\n    dispatch(load(list));\n  } catch (e) {\n    console.log('Error load');\n  }\n};\n\nexport const removeAsync = id => async dispatch => {\n  try {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      await api.room.delete(id);\n      dispatch(remove(id));\n    }\n  } catch (e) {\n    console.log('Error remove');\n  }\n};\n","import React, { useEffect } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAsync } from '../../redux/actions/rooms';\n\nfunction ChooseRoomView({ setRoomHandler }) {\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n  return (\n    <>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"room-label\">Помещение</InputLabel>\n        <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\" onChange={setRoomHandler}>\n          {rooms.map(room => (\n            <MenuItem key={room.id} value={room.id}>\n              {room.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nexport default ChooseRoomView;\n","import React, { useState } from 'react';\nimport { Typography, Paper, Stepper, StepLabel, Step, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CurrentReadingView from '../CurrentReadingView/CurrentReadingView';\nimport ChooseRoomView from '../ChooseRoomView/ChooseRoomView';\nimport api from '../../api';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(900 + theme.spacing(2) * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MainPage() {\n  const classes = useStyles();\n  const steps = ['Выбор помещения', 'Ввод данных'];\n  const [roomId, setRoomId] = useState('');\n  const [current, setCurrent] = useState(undefined);\n  const [temperature, setTemperature] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    console.log(roomId);\n    api.reading\n      .get(roomId)\n      .then(reading => {\n        setCurrent(reading);\n      })\n      .catch(() => {\n        setCurrent(undefined);\n      })\n      .finally(() => {\n        api.readings.get(roomId, new Date() - 7, new Date()).then(readings => {\n          setTemperature(\n            readings.map(reading => {\n              return {\n                date: moment(reading.date).format('DD.MM'),\n                temperature: reading.temperature\n              };\n            })\n          );\n          setHumidity(\n            readings.map(reading => {\n              return { date: moment(reading.date).format('DD.MM'), humidity: reading.humidity };\n            })\n          );\n        });\n        setActiveStep(activeStep + 1);\n      });\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <ChooseRoomView\n            setRoomHandler={room => {\n              setRoomId(room.target.value);\n              setCurrent(undefined);\n            }}\n          />\n        );\n      case 1:\n        return (\n          <CurrentReadingView\n            reading={current}\n            room={roomId}\n            updateReading={value => setCurrent(value)}\n            temperature={temperature}\n            humidity={humidity}\n            updateReadingList={(value, isUpdate) => {\n              if (isUpdate) {\n                const currentDay = moment(current.date).format('DD.MM');\n                setHumidity(\n                  humidity.map(el => {\n                    if (el.date === currentDay) {\n                      el.humidity = value.humidity;\n                    }\n                    return el;\n                  })\n                );\n                setTemperature(\n                  temperature.map(el => {\n                    if (el.date === currentDay) {\n                      el.temperature = value.temperature;\n                    }\n                    return el;\n                  })\n                );\n              } else {\n                const currentDay = moment(new Date()).format('DD.MM');\n                humidity.push({ date: currentDay, humidity: value.humidity });\n                setHumidity([...humidity]);\n                temperature.push({ date: currentDay, temperature: value.temperature });\n                setTemperature([...temperature]);\n              }\n            }}\n          />\n        );\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Журнал учёта температурно-влажностного режима\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Назад\n                    </Button>\n                  )}\n                  {activeStep === 0 && roomId && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      Вперед\n                    </Button>\n                  )}\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default MainPage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert/Alert';\nimport { loadAsync } from '../redux/actions/rooms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst PLOT_TYPES = {\n  h: 'Влажность',\n  t: 'Температура',\n  th: 'Общий'\n};\n\nconst validationSchema = yup.object({\n  type: yup.string('Выберите тип').required('Тип обязателен'),\n  room: yup.string('Выберите помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintPlot({ open, changeState }) {\n  const styles = useStyles();\n  const [error, setError] = useState('');\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      type: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.plot\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = 'plot.png';\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать графика\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                id=\"room\"\n                label=\"Помещение\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Тип</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                id=\"type\"\n                label=\"Тип\"\n                name=\"type\"\n                value={formik.values.type}\n                onChange={formik.handleChange}\n                error={formik.touched.type && Boolean(formik.errors.type)}\n                helperText={formik.touched.type && formik.errors.type}\n              >\n                {Object.entries(PLOT_TYPES).map(([key, value]) => (\n                  <MenuItem key={key} value={key}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  label=\"Окончание наблюдений\"\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintPlot;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { loadAsync } from '../redux/actions/rooms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst TABLE_FORMATS = {\n  pdf: 'pdf',\n  xlsx: 'xlsx',\n  csv: 'csv'\n};\n\nconst validationSchema = yup.object({\n  format: yup.string('Выберете формат').required('Формат обязателен'),\n  room: yup.string('Выберете помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintTable({ open, changeState }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      format: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.table\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = `table.${formik.values.format}`;\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n\n  useEffect(() => {\n    dispatch(loadAsync());\n  }, []);\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать таблицы\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                label=\"Помещение\"\n                id=\"room\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Формат</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                label=\"Формат\"\n                id=\"format\"\n                name=\"format\"\n                value={formik.values.format}\n                onChange={formik.handleChange}\n                error={formik.touched.format && Boolean(formik.errors.format)}\n                helperText={formik.touched.format && formik.errors.format}\n              >\n                {Object.entries(TABLE_FORMATS).map(([key, value]) => (\n                  <MenuItem key={key} value={value}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-between\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Окончание наблюдений\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintTable;\n","import api from '../../api';\nimport { setUserStatus } from './status';\nimport { closeUser } from './editForms';\n\nexport const usersActionTypes = {\n  edit: 'users/edit',\n  add: 'users/add',\n  delete: 'users/delete',\n  loadList: 'users/load',\n  setError: 'users/setError',\n  clearError: 'users/clearError'\n};\n\nexport const setError = error => ({\n  type: usersActionTypes.setError,\n  payload: error\n});\n\nexport const clearError = () => ({\n  type: usersActionTypes.clearError\n});\n\nexport const load = list => ({\n  type: usersActionTypes.loadList,\n  payload: list\n});\n\nexport const remove = id => ({\n  type: usersActionTypes.delete,\n  payload: id\n});\n\nexport const edit = item => ({\n  type: usersActionTypes.edit,\n  payload: item\n});\n\nexport const add = room => ({\n  type: usersActionTypes.add,\n  payload: room\n});\n\nexport const editAsync = value => async dispatch => {\n  try {\n    dispatch(clearError());\n    await api.user.put(value);\n    dispatch(edit(value));\n    dispatch(closeUser());\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const addAsync = name => async dispatch => {\n  try {\n    dispatch(clearError());\n    const item = await api.user.post(name);\n    dispatch(add(item));\n    dispatch(setUserStatus(false));\n  } catch (e) {\n    dispatch(setError(e.message));\n    dispatch(setUserStatus(true));\n  }\n};\n\nexport const loadAsync = () => async dispatch => {\n  try {\n    const list = await api.users.get();\n    dispatch(load(list));\n  } catch (e) {\n    console.log('Error load');\n  }\n};\n\nexport const removeAsync = id => async dispatch => {\n  try {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      await api.user.delete(id);\n      dispatch(remove(id));\n    }\n  } catch (e) {\n    console.log('Error remove');\n  }\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Alert from '@material-ui/lab/Alert';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsync, editAsync } from '../redux/actions/users';\nimport { setUserStatus } from '../redux/actions/status';\nimport { closeUser } from '../redux/actions/editForms';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен'),\n  isAdmin: yup.bool(false)\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction UserForm({ open, isCreation, user }) {\n  const error = useSelector(store => store.users.error);\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      login: user ? user.login : '',\n      password: '',\n      isAdmin: user ? user.isAdmin : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (isCreation) {\n        dispatch(addAsync({ ...values }));\n      } else {\n        dispatch(editAsync({ id: user.id, ...values }));\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} пользователя\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              variant=\"outlined\"\n              className={styles.input}\n              margin=\"dense\"\n              id=\"login\"\n              name=\"login\"\n              label=\"Логин\"\n              type=\"text\"\n              value={formik.values.login}\n              onChange={formik.handleChange}\n              error={formik.touched.login && Boolean(formik.errors.login)}\n              helperText={formik.touched.login && formik.errors.login}\n              fullWidth\n            />\n            <TextField\n              className={styles.input}\n              variant=\"outlined\"\n              margin=\"dense\"\n              id=\"password\"\n              name=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"isAdmin\"\n                  color=\"primary\"\n                  defaultChecked={formik.values.isAdmin}\n                  onChange={formik.handleChange}\n                />\n              }\n              label=\"Администратор\"\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                if (isCreation) {\n                  dispatch(setUserStatus(false));\n                } else {\n                  dispatch(closeUser());\n                }\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UserForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsync, editAsync } from '../redux/actions/rooms';\nimport { setRoomStatus } from '../redux/actions/status';\nimport { closeRoom } from '../redux/actions/editForms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst validationSchema = yup.object({\n  name: yup.string('Введите название помещения').required('Название не может быт пустым')\n});\n\nfunction RoomForm({ open, isCreation, room }) {\n  const dispatch = useDispatch();\n  const error = useSelector(store => store.rooms.error);\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      name: room ? room.name : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (isCreation) {\n        dispatch(addAsync(values.name));\n      } else {\n        dispatch(editAsync({ id: room.id, name: values.name }));\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} помещения\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              multiline\n              rows={5}\n              id=\"name\"\n              label=\"Название помещения\"\n              name=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              aria-label=\"empty textarea\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                if (isCreation) {\n                  dispatch(setRoomStatus(false));\n                } else {\n                  dispatch(closeRoom());\n                }\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RoomForm;\n","import React, { useCallback } from 'react';\nimport { AppBar, Button, IconButton, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrintPlot from '../PrintPlot/PrintPlot';\nimport PrintTable from '../PrintTable/PrintTable';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setCreate,\n  setEdit,\n  setPlotStatus,\n  setPrint,\n  setRoomStatus,\n  setTableStatus,\n  setUserStatus\n} from '../redux/actions/status';\nimport { logout } from '../auth';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    position: 'relative'\n  },\n  menuButton: {\n    background: 'none',\n    border: 'none',\n    outline: 'none',\n    color: 'white',\n    textTransform: 'uppercase'\n  }\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { room, user, table, plot, create, print, edit } = useSelector(store => store.status);\n  const currentUser = useSelector(store => store.currentUser.user);\n\n  const handleClickOpenPrintPlot = () => {\n    dispatch(setPrint(null));\n    dispatch(setPlotStatus(true));\n  };\n\n  const handleClickOpenPrintTable = () => {\n    dispatch(setPrint(null));\n    dispatch(setTableStatus(true));\n  };\n\n  const handleClickUserCreation = () => {\n    dispatch(setCreate(null));\n    dispatch(setUserStatus(true));\n  };\n\n  const handleClickRoomCreation = () => {\n    dispatch(setCreate(null));\n    dispatch(setRoomStatus(true));\n  };\n\n  return (\n    <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton onClick={useCallback(() => history.push('/reading-interface'), [history])}>\n          <HomeIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => dispatch(setPrint(event.currentTarget))}\n        >\n          Печать\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={print}\n          keepMounted\n          open={Boolean(print)}\n          onClose={() => dispatch(setPrint(null))}\n        >\n          <MenuItem onClick={handleClickOpenPrintTable}>Таблица</MenuItem>\n          <PrintTable open={table} changeState={value => dispatch(setTableStatus(value))} />\n          <MenuItem onClick={handleClickOpenPrintPlot}>График</MenuItem>\n          <PrintPlot open={plot} changeState={value => dispatch(setPlotStatus(value))} />\n        </Menu>\n        {currentUser.isAdmin && (\n          <>\n            <Button\n              classes={{\n                root: classes.menuButton\n              }}\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={event => dispatch(setCreate(event.currentTarget))}\n            >\n              Создание\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={create}\n              keepMounted\n              open={Boolean(create)}\n              onClose={() => dispatch(setCreate(null))}\n            >\n              <MenuItem onClick={handleClickUserCreation}>Пользователь</MenuItem>\n              <UserForm isCreation={true} open={Boolean(user)} />\n              <MenuItem onClick={handleClickRoomCreation}>Помещение</MenuItem>\n              <RoomForm isCreation={true} open={Boolean(room)} />\n            </Menu>\n            <Button\n              classes={{\n                root: classes.menuButton\n              }}\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={event => dispatch(setEdit(event.currentTarget))}\n            >\n              Редактирование\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={edit}\n              keepMounted\n              open={Boolean(edit)}\n              onClose={() => dispatch(setEdit(null))}\n            >\n              <MenuItem\n                onClick={() => {\n                  dispatch(setEdit(null));\n                  history.push('/reading-interface/users');\n                }}\n              >\n                Пользователь\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  dispatch(setEdit(null));\n                  history.push('/reading-interface/rooms');\n                }}\n              >\n                Помещение\n              </MenuItem>\n            </Menu>\n          </>\n        )}\n        <IconButton onClick={() => logout()}>\n          <ExitToAppIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { Avatar, Typography, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport api from '../api';\nimport { login } from '../auth';\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен')\n});\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#be392a'\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction LoginForm() {\n  const classes = useStyles();\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      login: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      setError('');\n      try {\n        const data = await api.auth.post(values);\n        if (data.access_token) {\n          login(data);\n          history.push('/reading-interface');\n        } else {\n          setError('Please type in correct username/password');\n        }\n      } catch (e) {\n        setError(e.message);\n      }\n    }\n  });\n\n  return (\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <FingerprintIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Вход в систему\n      </Typography>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      <form noValidate onSubmit={formik.handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"login\"\n          label=\"Логин\"\n          name=\"login\"\n          autoComplete=\"login\"\n          value={formik.values.login}\n          onChange={formik.handleChange}\n          error={formik.touched.login && Boolean(formik.errors.login)}\n          helperText={formik.touched.login && formik.errors.login}\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Пароль\"\n          type=\"password\"\n          id=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          autoComplete=\"current-password\"\n        />\n        <Button\n          className={classes.submit}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          Войти\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openRoom, openUser } from '../redux/actions/editForms';\n\nfunction Entity({ item, fieldForRendering, deleteHandler, updateHandler }) {\n  const dispatch = useDispatch();\n  const isEditUserOpen = useSelector(store => store.editForms.user);\n  const isEditRoomOpen = useSelector(store => store.editForms.room);\n  return (\n    <ListItem>\n      {fieldForRendering === 'login' && (\n        <UserForm\n          isCreation={false}\n          user={item}\n          open={isEditUserOpen === item.id}\n          updateHandler={updateHandler}\n        />\n      )}\n      {fieldForRendering === 'name' && (\n        <RoomForm isCreation={false} room={item} open={isEditRoomOpen === item.id} />\n      )}\n      <ListItemAvatar>\n        <Avatar>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={item[fieldForRendering]} />\n      <ListItemSecondaryAction>\n        {fieldForRendering === 'login' && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(openUser(item.id))}>\n            <EditIcon />\n          </IconButton>\n        )}\n        {fieldForRendering === 'name' && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => dispatch(openRoom(item.id))}>\n            <EditIcon />\n          </IconButton>\n        )}\n        {item.readings.length === 0 && (\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteHandler(item.id)}>\n            <DeleteIcon />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Entity;\n","import React from 'react';\nimport Entity from '../Entity/Entity';\nimport { List, Typography } from '@material-ui/core';\n\nfunction EntityList({ items, fieldForRendering, deleteHandler, updateHandler }) {\n  if (items.length === 0) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        Ничего не найдено\n      </Typography>\n    );\n  } else {\n    return (\n      <List style={{ maxHeight: '60vh', overflowY: 'scroll' }}>\n        {items.map(item => (\n          <Entity\n            item={item}\n            key={item.id}\n            fieldForRendering={fieldForRendering}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default EntityList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nfunction SearchString({ filterItems }) {\n  const classes = useStyles();\n  const [value, changeValue] = useState();\n\n  function changeHandler(event) {\n    filterItems(event.target.value);\n    changeValue(event.target.value);\n  }\n\n  return (\n    <Paper variant=\"outlined\" component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Введите данные для поиска\"\n        inputProps={{ 'aria-label': 'Введите данные для поиска' }}\n        defaultValue={value}\n        onChange={changeHandler}\n      />\n      <SearchIcon color=\"disabled\" className={classes.iconButton} />\n    </Paper>\n  );\n}\n\nexport default SearchString;\n","import React, { useState } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EntityList from '../../EntityList/EntityList';\nimport SearchString from '../../SearchString/SearchString';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  }\n}));\n\nfunction EntityListView({ items, fieldForSearching, title, deleteHandler, updateHandler }) {\n  const classes = useStyles();\n  const [filter, changeFilter] = useState('');\n\n  function changeFilterHandler(value) {\n    changeFilter(value);\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            {title}\n          </Typography>\n          <SearchString filterItems={changeFilterHandler} />\n          <EntityList\n            items={items.filter(el => el[fieldForSearching].includes(filter))}\n            fieldForRendering={fieldForSearching}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default EntityListView;\n","import React from 'react';\nimport EntityListView from '../EntityListView/EntityListView';\nimport { edit as roomEdit } from '../../redux/actions/users';\nimport {\n  loadAsync as roomLoadAsync,\n  removeAsync as roomRemoveAsync\n} from '../../redux/actions/rooms';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const RoomsView = () => {\n  const dispatch = useDispatch();\n  const rooms = useSelector(store => store.rooms.list);\n\n  useEffect(async () => {\n    dispatch(roomLoadAsync());\n  }, []);\n\n  return (\n    <EntityListView\n      items={rooms}\n      fieldForSearching=\"name\"\n      title=\"Помещения\"\n      deleteHandler={id => dispatch(roomRemoveAsync(id))}\n      updateHandler={room => roomEdit(room)}\n    />\n  );\n};\n","import React from 'react';\nimport EntityListView from '../EntityListView/EntityListView';\nimport {\n  loadAsync as usersLoadAsync,\n  removeAsync as usersRemoveAsync\n} from '../../redux/actions/users';\nimport { edit as userEdit } from '../../redux/actions/rooms';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const UsersView = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(store => store.users.list);\n\n  useEffect(async () => {\n    dispatch(usersLoadAsync());\n  }, []);\n\n  return (\n    <EntityListView\n      items={users}\n      fieldForSearching=\"login\"\n      title=\"Пользователи\"\n      deleteHandler={id => dispatch(usersRemoveAsync(id))}\n      updateHandler={user => userEdit(user)}\n    />\n  );\n};\n","import api from '../../api';\n\nexport const currentUserActionTypes = {\n  get: 'currentUser/get'\n};\n\nexport const getUser = user => ({\n  type: currentUserActionTypes.get,\n  payload: user\n});\n\nexport const getUserAsync = () => async dispatch => {\n  try {\n    const data = await api.user.get();\n    dispatch(getUser(data));\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport MainPage from './views/MainPage/MainPage';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './Header/Header';\nimport LoginForm from './LoginForm/LoginForm';\nimport { useAuth } from './auth';\nimport { RoomsView } from './views/RoomsView/RoomsView';\nimport { UsersView } from './views/UsersView/UsersView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserAsync } from './redux/actions/currentUser';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/reading-interface/login\" component={() => <LoginForm />} />\n        <PrivateRoute\n          exact\n          path=\"/reading-interface\"\n          component={() => <HeaderWrapper component={MainPage} />}\n        />\n        <PrivateAdminRoute\n          exact\n          path=\"/reading-interface/users\"\n          component={() => <HeaderWrapper component={UsersView} />}\n        />\n        <PrivateAdminRoute\n          exact\n          path=\"/reading-interface/rooms\"\n          component={() => <HeaderWrapper component={RoomsView} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        logged ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/reading-interface/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport const PrivateAdminRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n  const user = useSelector(store => store.currentUser.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUserAsync());\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        logged && user.isAdmin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport const HeaderWrapper = ({ component: Component, ...props }) => {\n  return (\n    <>\n      <Header />\n      <Component {...props} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { roomsActionTypes } from '../actions/rooms';\n\nexport const roomsInitialStore = {\n  list: []\n};\n\nexport function roomsReducer(state = roomsInitialStore, action) {\n  switch (action.type) {\n    case roomsActionTypes.loadList: {\n      return { ...state, list: action.payload };\n    }\n    case roomsActionTypes.delete: {\n      return {\n        ...state,\n        list: [...state.list.filter(el => el.id !== action.payload)]\n      };\n    }\n    case roomsActionTypes.add: {\n      return {\n        ...state,\n        list: [...state.list, action.payload]\n      };\n    }\n    case roomsActionTypes.edit: {\n      return {\n        ...state,\n        list: [\n          ...state.list.map(item => {\n            if (item.id === action.payload.id) {\n              item.name = action.payload.name;\n            }\n            return item;\n          })\n        ]\n      };\n    }\n    case roomsActionTypes.clearError: {\n      return {\n        ...state,\n        error: ''\n      };\n    }\n    case roomsActionTypes.setError: {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { usersActionTypes } from '../actions/users';\n\nexport const usersInitialStore = {\n  list: []\n};\n\nexport function usersReducer(state = usersInitialStore, action) {\n  switch (action.type) {\n    case usersActionTypes.loadList: {\n      return { ...state, list: action.payload };\n    }\n    case usersActionTypes.delete: {\n      return {\n        ...state,\n        list: [...state.list.filter(el => el.id !== action.payload)]\n      };\n    }\n    case usersActionTypes.add: {\n      return {\n        ...state,\n        list: [...state.list, action.payload]\n      };\n    }\n    case usersActionTypes.edit: {\n      return {\n        ...state,\n        list: [\n          ...state.list.map(item => {\n            if (item.id === action.payload.id) {\n              item.login = action.payload.login;\n              item.isAdmin = action.payload.isAdmin;\n            }\n            return item;\n          })\n        ]\n      };\n    }\n    case usersActionTypes.clearError: {\n      return {\n        ...state,\n        error: ''\n      };\n    }\n    case usersActionTypes.setError: {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { statusActionTypes } from '../actions/status';\n\nexport const statusInitialStore = {\n  user: false,\n  room: false,\n  plot: false,\n  table: false,\n  create: false,\n  print: false,\n  edit: false\n};\n\nexport function statusReducer(state = statusInitialStore, action) {\n  switch (action.type) {\n    case statusActionTypes.setPlotStatus: {\n      return { ...state, plot: action.payload };\n    }\n    case statusActionTypes.setTableStatus: {\n      return { ...state, table: action.payload };\n    }\n    case statusActionTypes.setRoomStatus: {\n      return { ...state, room: action.payload };\n    }\n    case statusActionTypes.setUserStatus: {\n      return { ...state, user: action.payload };\n    }\n    case statusActionTypes.setCreate: {\n      return { ...state, create: action.payload };\n    }\n    case statusActionTypes.setPrint: {\n      return { ...state, print: action.payload };\n    }\n    case statusActionTypes.setEdit: {\n      return { ...state, edit: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","import { currentUserActionTypes } from '../actions/currentUser';\n\nexport const currentUserInitialStore = {\n  user: {}\n};\n\nexport function currentUserReducer(state = currentUserInitialStore, action) {\n  switch (action.type) {\n    case currentUserActionTypes.get: {\n      return { ...state, user: action.payload };\n    }\n    default:\n      return state;\n  }\n}\n","import { editFormsActionTypes } from '../actions/editForms';\n\nexport const editFormsInitialStore = {\n  user: '',\n  room: ''\n};\n\nexport function editFormsReducer(state = editFormsInitialStore, action) {\n  switch (action.type) {\n    case editFormsActionTypes.openUser: {\n      return { ...state, user: action.payload };\n    }\n    case editFormsActionTypes.closeUser: {\n      return { ...state, user: '' };\n    }\n    case editFormsActionTypes.openRoom: {\n      return { ...state, room: action.payload };\n    }\n    case editFormsActionTypes.closeRoom: {\n      return { ...state, room: '' };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { roomsReducer } from './rooms';\nimport { usersReducer } from './users';\nimport { statusReducer } from './status';\nimport { currentUserReducer } from './currentUser';\nimport { editFormsReducer } from './editForms';\n\nconst createRootReducer = () =>\n  combineReducers({\n    rooms: roomsReducer,\n    users: usersReducer,\n    status: statusReducer,\n    currentUser: currentUserReducer,\n    editForms: editFormsReducer\n  });\n\nexport default createRootReducer;\n","import { roomsInitialStore } from './reducers/rooms';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createRootReducer from './reducers';\nimport { usersInitialStore } from './reducers/users';\n\nexport const initialState = {\n  rooms: roomsInitialStore,\n  users: usersInitialStore\n};\n\nexport const rootReducer = createRootReducer();\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}