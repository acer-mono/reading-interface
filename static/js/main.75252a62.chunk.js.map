{"version":3,"sources":["Chart/Chart.js","api.js","ReadingForm/ReadingForm.js","CurrentReading/CurrentReading.js","views/CurrentReadingView/CurrentReadingView.js","views/ChooseRoomView/ChooseRoomView.js","views/MainPage/MainPage.js","UserForm/UserForm.js","RoomForm/RoomForm.js","Entity/Entity.js","EntityList/EntityList.js","SearchString/SearchString.js","views/EntityListView/EntityListView.js","PrintPlot/PrintPlot.js","PrintTable/PrintTable.js","Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","custom","border","boxShadow","Chart","data","title","axisName","yAxis","theme","useTheme","classes","Card","className","CardHeader","titleTypographyProps","color","CardContent","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Label","angle","position","style","textAnchor","fill","primary","Line","type","main","dot","URL","defaultHeaders","Authorization","handleErrors","response","a","json","status","Error","message","api","users","get","fetch","method","headers","then","user","post","login","password","isAdmin","body","JSON","stringify","is_admin","put","id","delete","rooms","room","name","reading","temperature","humidity","readings","from","to","validationSchema","yup","required","buttons","spacing","input","ReadingForm","open","changeHandler","updateReading","updateReadingList","useState","error","setError","styles","formik","useFormik","initialValues","onSubmit","values","catch","e","Dialog","aria-labelledby","DialogTitle","Alert","severity","handleSubmit","DialogContent","TextField","fullWidth","variant","label","value","onChange","handleChange","touched","Boolean","errors","helperText","InputLabelProps","shrink","inputProps","step","min","DialogActions","Button","onClick","CurrentReading","setOpen","Typography","component","CardActions","href","CurrentReadingView","Grid","container","direction","justify","item","ChooseRoomView","setRoomHandler","FormControl","InputLabel","Select","labelId","map","MenuItem","layout","breakpoints","up","marginLeft","marginRight","paper","marginTop","marginBottom","padding","stepper","display","justifyContent","button","MainPage","steps","roomId","setRoomId","undefined","current","setCurrent","setTemperature","setHumidity","React","activeStep","setActiveStep","Paper","align","Stepper","Step","StepLabel","Fragment","length","gutterBottom","target","isUpdate","currentDay","moment","date","format","el","push","getStepContent","console","log","finally","Date","UserForm","isCreation","updateHandler","addHandler","FormControlLabel","control","Checkbox","defaultChecked","RoomForm","multiline","rows","aria-label","Entity","fieldForRendering","deleteHandler","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","IconButton","edge","EntityList","items","List","maxHeight","overflowY","root","alignItems","flex","iconButton","SearchString","filterItems","changeValue","InputBase","placeholder","defaultValue","event","EntityListView","fieldForSearching","filter","changeFilter","includes","PrintPlot","changeState","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","PrintTable","appBar","menuButton","background","outline","textTransform","Header","addUserHandler","addRoomHandler","history","useHistory","print","setPrint","create","setCreate","edit","setEdit","openPrintPlot","setOpenPrintPlot","openPrintTable","setOpenPrintTable","userCreation","setUserCreation","roomCreation","setRoomCreation","AppBar","Toolbar","useCallback","fontSize","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","onClose","App","setUsers","setRooms","deleteUserHandler","confirm","deletedItem","deleteRoomHandler","updateUserHandler","u","updateRoomHandler","r","useEffect","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75252a62.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport { Card, CardHeader, CardContent, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  custom: {\n    border: 'none',\n    boxShadow: 'none'\n  }\n});\n\nexport default function Chart({ data, title, axisName, yAxis }) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.custom}>\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title={title} />\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={260}>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n              >\n                {axisName}\n              </Label>\n            </YAxis>\n            <Line type=\"monotone\" dataKey={yAxis} stroke={theme.palette.primary.main} dot={true} />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","const URL = 'https://vki.pythonanywhere.com';\nconst defaultHeaders = {\n  'Content-Type': 'application/json',\n  Authorization:\n    'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTYyMDM3NzE5OSwianRpIjoiZGNiNzA2MTQtZGVjZS00MzgxLWE4NmUtNTg3ZmQ2M2Q4YWYzIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjEiLCJuYmYiOjE2MjAzNzcxOTksImV4cCI6MTYyMDk4MTk5OX0.uEOnjKZEakUqd_0xsxzeqpDVA7mFDvP_fvYeXIixGu4'\n};\nasync function handleErrors(response) {\n  const data = await response.json();\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\nconst api = {\n  users: {\n    get: () =>\n      fetch(`${URL}/users`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  user: {\n    post: ({ login, password, isAdmin }) =>\n      fetch(`${URL}/user`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    put: ({ id, login, password, isAdmin }) =>\n      fetch(`${URL}/user`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    delete: id =>\n      fetch(`${URL}/user`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  rooms: {\n    get: () =>\n      fetch(`${URL}/rooms`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  room: {\n    post: name =>\n      fetch(`${URL}/room`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          name\n        })\n      }).then(handleErrors),\n    put: ({ id, name }) =>\n      fetch(`${URL}/room`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          name\n        })\n      }).then(handleErrors),\n    delete: id =>\n      fetch(`${URL}/room`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  reading: {\n    get: room =>\n      fetch(`${URL}/reading?room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n    post: ({ temperature, humidity, room }) =>\n      fetch(`${URL}/reading`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors),\n    put: ({ temperature, humidity, room }) =>\n      fetch(`${URL}/reading`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors)\n  },\n  readings: {\n    get: (room, from, to) =>\n      fetch(`${URL}/readings?from=${from}&to=${to}&room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  }\n};\n\nexport default api;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as yup from 'yup';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport { Alert } from '@material-ui/lab';\n\nconst validationSchema = yup.object({\n  temperature: yup.number().required('Поле обязательно'),\n  humidity: yup.number().required('Поле обязательно')\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction ReadingForm({ open, changeHandler, reading, room, updateReading, updateReadingList }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      temperature: reading ? reading.temperature : 0,\n      humidity: reading ? reading.humidity : 0\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (!reading) {\n        api.reading\n          .post({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, false);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.reading\n          .put({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, true);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {reading && 'Изменениe'}\n          {!reading && 'Добавление'} показаний\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              className={styles.input}\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"temperature\"\n              name=\"temperature\"\n              label=\"Температура\"\n              type=\"number\"\n              value={formik.values.temperature}\n              onChange={formik.handleChange}\n              error={formik.touched.temperature && Boolean(formik.errors.temperature)}\n              helperText={formik.touched.temperature && formik.errors.temperature}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1\n              }}\n            />\n            <TextField\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"humidity\"\n              name=\"humidity\"\n              label=\"Влажность\"\n              type=\"number\"\n              value={formik.values.humidity}\n              onChange={formik.handleChange}\n              error={formik.touched.humidity && Boolean(formik.errors.humidity)}\n              helperText={formik.touched.humidity && formik.errors.humidity}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1,\n                min: 0\n              }}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {reading && 'Сохранить'}\n              {!reading && 'Добавить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReadingForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Card, CardContent, CardActions, CardHeader } from '@material-ui/core';\nimport ReadingForm from '../ReadingForm/ReadingForm';\n\nexport default function CurrentReading({ reading, room, updateReading, updateReadingList }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title=\"Текущие показания:\" />\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Температура:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.temperature}℃`}\n          {!reading && '-'}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Влажность:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.humidity}%`}\n          {!reading && '-'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" href=\"#\" onClick={() => setOpen(true)}>\n          {reading && 'Изменить'}\n          {!reading && 'Добавить'}\n        </Button>\n        <ReadingForm\n          room={room}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          reading={reading}\n          updateReading={updateReading}\n          updateReadingList={updateReadingList}\n        />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Chart from '../../Chart/Chart';\nimport CurrentReading from '../../CurrentReading/CurrentReading';\nimport { Grid } from '@material-ui/core';\n\nfunction CurrentReadingView({\n  reading,\n  room,\n  updateReading,\n  temperature,\n  humidity,\n  updateReadingList\n}) {\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"space-between\">\n        <Grid item>\n          <Chart\n            title=\"Температура\"\n            axisName=\"Температура(℃)\"\n            data={temperature}\n            yAxis=\"temperature\"\n          />\n          <Chart title=\"Влажность\" axisName=\"Влажность(%)\" data={humidity} yAxis=\"humidity\" />\n        </Grid>\n        <Grid item>\n          <CurrentReading\n            reading={reading}\n            room={room}\n            updateReadingList={updateReadingList}\n            updateReading={updateReading}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default CurrentReadingView;\n","import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\nfunction ChooseRoomView({ rooms, setRoomHandler }) {\n  return (\n    <>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"room-label\">Помещение</InputLabel>\n        <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\" onChange={setRoomHandler}>\n          {rooms.map(room => (\n            <MenuItem key={room.id} value={room.id}>\n              {room.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nexport default ChooseRoomView;\n","import React, { useState } from 'react';\nimport { Typography, Paper, Stepper, StepLabel, Step, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CurrentReadingView from '../CurrentReadingView/CurrentReadingView';\nimport ChooseRoomView from '../ChooseRoomView/ChooseRoomView';\nimport api from '../../api';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(900 + theme.spacing(2) * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MainPage({ rooms }) {\n  const classes = useStyles();\n  const steps = ['Выбор помещения', 'Ввод данных'];\n  const [roomId, setRoomId] = useState('');\n  const [current, setCurrent] = useState(undefined);\n  const [temperature, setTemperature] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    console.log(roomId);\n    api.reading\n      .get(roomId)\n      .then(reading => {\n        setCurrent(reading);\n      })\n      .catch(() => {\n        setCurrent(undefined);\n      })\n      .finally(() => {\n        api.readings.get(roomId, new Date() - 7, new Date()).then(readings => {\n          setTemperature(\n            readings.map(reading => {\n              return {\n                date: moment(reading.date).format('DD.MM'),\n                temperature: reading.temperature\n              };\n            })\n          );\n          setHumidity(\n            readings.map(reading => {\n              return { date: moment(reading.date).format('DD.MM'), humidity: reading.humidity };\n            })\n          );\n        });\n        setActiveStep(activeStep + 1);\n      });\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <ChooseRoomView\n            rooms={rooms}\n            setRoomHandler={room => {\n              setRoomId(room.target.value);\n              setCurrent(undefined);\n            }}\n          />\n        );\n      case 1:\n        return (\n          <CurrentReadingView\n            reading={current}\n            room={roomId}\n            updateReading={value => setCurrent(value)}\n            temperature={temperature}\n            humidity={humidity}\n            updateReadingList={(value, isUpdate) => {\n              const currentDay = moment(current.date).format('DD.MM');\n              if (isUpdate) {\n                setHumidity(\n                  humidity.map(el => {\n                    if (el.date === currentDay) {\n                      el.humidity = value.humidity;\n                    }\n                    return el;\n                  })\n                );\n                setTemperature(\n                  temperature.map(el => {\n                    if (el.date === currentDay) {\n                      el.temperature = value.temperature;\n                    }\n                    return el;\n                  })\n                );\n              } else {\n                humidity.push({ date: currentDay, humidity: value.humidity });\n                setHumidity([...humidity]);\n                temperature.push({ date: currentDay, temperature: value.temperature });\n                setTemperature([...temperature]);\n              }\n            }}\n          />\n        );\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Журнал учёта температурно-влажностного режима\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Назад\n                    </Button>\n                  )}\n                  {activeStep === 0 && roomId && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      Вперед\n                    </Button>\n                  )}\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default MainPage;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Alert from '@material-ui/lab/Alert';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport api from '../api';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен'),\n  isAdmin: yup.bool(false)\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction UserForm({ open, changeHandler, isCreation, user, updateHandler, addHandler }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      login: user ? user.login : '',\n      password: user ? user.password : '',\n      isAdmin: user ? user.isAdmin : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (isCreation) {\n        api.user\n          .post(values)\n          .then(user => {\n            addHandler(user);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.user\n          .put({ id: user.id, ...values })\n          .then(user => {\n            updateHandler(user);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} пользователя\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              variant=\"outlined\"\n              className={styles.input}\n              margin=\"dense\"\n              id=\"login\"\n              name=\"login\"\n              label=\"Логин\"\n              type=\"text\"\n              value={formik.values.login}\n              onChange={formik.handleChange}\n              error={formik.touched.login && Boolean(formik.errors.login)}\n              helperText={formik.touched.login && formik.errors.login}\n              fullWidth\n            />\n            <TextField\n              className={styles.input}\n              variant=\"outlined\"\n              margin=\"dense\"\n              id=\"password\"\n              name=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"isAdmin\"\n                  color=\"primary\"\n                  defaultChecked={formik.values.isAdmin}\n                  onChange={formik.handleChange}\n                />\n              }\n              label=\"Администратор\"\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                changeHandler(false);\n                setError('');\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UserForm;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport api from '../api';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst validationSchema = yup.object({\n  name: yup.string('Введите название помещения').required('Название не может быт пустым')\n});\n\nfunction RoomForm({ open, isCreation, room, changeHandler, addHandler, updateHandler }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      name: room ? room.name : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (isCreation) {\n        api.room\n          .post(values.name)\n          .then(room => {\n            addHandler(room);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.room\n          .put({ id: room.id, ...values })\n          .then(user => {\n            updateHandler(user);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} помещения\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              multiline\n              rows={5}\n              id=\"name\"\n              label=\"Название помещения\"\n              name=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              aria-label=\"empty textarea\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RoomForm;\n","import React, { useState } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\n\nfunction Entity({ item, fieldForRendering, deleteHandler, updateHandler }) {\n  const [open, setOpen] = useState();\n  return (\n    <ListItem>\n      {fieldForRendering === 'login' && (\n        <UserForm\n          isCreation={false}\n          user={item}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          updateHandler={updateHandler}\n        />\n      )}\n      {fieldForRendering === 'name' && (\n        <RoomForm\n          isCreation={false}\n          room={item}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          updateHandler={updateHandler}\n        />\n      )}\n      <ListItemAvatar>\n        <Avatar>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={item[fieldForRendering]} />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => setOpen(true)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteHandler(item.id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Entity;\n","import React from 'react';\nimport Entity from '../Entity/Entity';\nimport { List, Typography } from '@material-ui/core';\n\nfunction EntityList({ items, fieldForRendering, deleteHandler, updateHandler }) {\n  if (items.length === 0) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        Ничего не найдено\n      </Typography>\n    );\n  } else {\n    return (\n      <List style={{ maxHeight: '60vh', overflowY: 'scroll' }}>\n        {items.map(item => (\n          <Entity\n            item={item}\n            key={item.id}\n            fieldForRendering={fieldForRendering}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default EntityList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nfunction SearchString({ filterItems }) {\n  const classes = useStyles();\n  const [value, changeValue] = useState();\n\n  function changeHandler(event) {\n    filterItems(event.target.value);\n    changeValue(event.target.value);\n  }\n\n  return (\n    <Paper variant=\"outlined\" component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Введите данные для поиска\"\n        inputProps={{ 'aria-label': 'Введите данные для поиска' }}\n        defaultValue={value}\n        onChange={changeHandler}\n      />\n      <SearchIcon color=\"disabled\" className={classes.iconButton} />\n    </Paper>\n  );\n}\n\nexport default SearchString;\n","import React, { useState } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EntityList from '../../EntityList/EntityList';\nimport SearchString from '../../SearchString/SearchString';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  }\n}));\n\nfunction EntityListView({ items, fieldForSearching, title, deleteHandler, updateHandler }) {\n  const classes = useStyles();\n  const [filter, changeFilter] = useState('');\n\n  function changeFilterHandler(value) {\n    changeFilter(value);\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            {title}\n          </Typography>\n          <SearchString filterItems={changeFilterHandler} />\n          <EntityList\n            items={items.filter(el => el[fieldForSearching].includes(filter))}\n            fieldForRendering={fieldForSearching}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default EntityListView;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction PrintPlot({ open, changeState }) {\n  const styles = useStyles();\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">Печать графика</DialogTitle>\n        <DialogContent>\n          <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n            <InputLabel id=\"room-label\">Помещение</InputLabel>\n            <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\">\n              <MenuItem value={1}>Хранилище №1</MenuItem>\n              <MenuItem value={2}>Хранилище №2</MenuItem>\n              <MenuItem value={3}>Хранилище №3</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"select-outlined-label\">Тип</InputLabel>\n            <Select labelId=\"select-outlined-label\" id=\"Type\" label=\"Тип\">\n              <MenuItem value={1}>Температура</MenuItem>\n              <MenuItem value={2}>Влажность</MenuItem>\n              <MenuItem value={3}>Общий</MenuItem>\n            </Select>\n          </FormControl>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                fullWidth\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"start\"\n                label=\"Начало наблюдений\"\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n              <KeyboardDatePicker\n                fullWidth\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"end\"\n                label=\"Окончание наблюдений\"\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions className={styles.buttons}>\n          <Button color=\"primary\" onClick={() => changeState(false)}>\n            Отмена\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => changeState(false)}>\n            Печать\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintPlot;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction PrintTable({ open, changeState }) {\n  const styles = useStyles();\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">Печать таблицы</DialogTitle>\n        <DialogContent>\n          <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n            <InputLabel id=\"room-label\">Помещение</InputLabel>\n            <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\">\n              <MenuItem value={1}>Хранилище №1</MenuItem>\n              <MenuItem value={2}>Хранилище №2</MenuItem>\n              <MenuItem value={3}>Хранилище №3</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"select-outlined-label\">Формат</InputLabel>\n            <Select labelId=\"select-outlined-label\" id=\"Format\" label=\"Формат\">\n              <MenuItem value={1}>pdf</MenuItem>\n              <MenuItem value={2}>csv</MenuItem>\n              <MenuItem value={3}>xlsx</MenuItem>\n            </Select>\n          </FormControl>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-between\">\n              <KeyboardDatePicker\n                fullWidth\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"start\"\n                label=\"Начало наблюдений\"\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n              <KeyboardDatePicker\n                fullWidth\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"end\"\n                label=\"Окончание наблюдений\"\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions className={styles.buttons}>\n          <Button color=\"primary\" onClick={() => changeState(false)}>\n            Отмена\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => changeState(false)}>\n            Печать\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintTable;\n","import React, { useCallback } from 'react';\nimport { AppBar, Button, IconButton, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrintPlot from '../PrintPlot/PrintPlot';\nimport PrintTable from '../PrintTable/PrintTable';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    position: 'relative'\n  },\n  menuButton: {\n    background: 'none',\n    border: 'none',\n    outline: 'none',\n    color: 'white',\n    textTransform: 'uppercase'\n  }\n}));\n\nfunction Header({ addUserHandler, addRoomHandler }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [print, setPrint] = React.useState(null);\n  const [create, setCreate] = React.useState(null);\n  const [edit, setEdit] = React.useState(null);\n  const [openPrintPlot, setOpenPrintPlot] = React.useState(false);\n  const [openPrintTable, setOpenPrintTable] = React.useState(false);\n  const [userCreation, setUserCreation] = React.useState(false);\n  const [roomCreation, setRoomCreation] = React.useState(false);\n\n  const handleClickOpenPrintPlot = () => {\n    setPrint(null);\n    setOpenPrintPlot(true);\n  };\n\n  const handleClickOpenPrintTable = () => {\n    setPrint(null);\n    setOpenPrintTable(true);\n  };\n\n  const handleClickUserCreation = () => {\n    setCreate(null);\n    setUserCreation(true);\n  };\n\n  const handleClickRoomCreation = () => {\n    setCreate(null);\n    setRoomCreation(true);\n  };\n\n  return (\n    <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton onClick={useCallback(() => history.push('/'), [history])}>\n          <HomeIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setPrint(event.currentTarget)}\n        >\n          Печать\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={print}\n          keepMounted\n          open={Boolean(print)}\n          onClose={() => setPrint(null)}\n        >\n          <MenuItem onClick={handleClickOpenPrintTable}>Таблица</MenuItem>\n          <PrintTable open={openPrintTable} changeState={value => setOpenPrintTable(value)} />\n          <MenuItem onClick={handleClickOpenPrintPlot}>График</MenuItem>\n          <PrintPlot open={openPrintPlot} changeState={value => setOpenPrintPlot(value)} />\n        </Menu>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setCreate(event.currentTarget)}\n        >\n          Создание\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={create}\n          keepMounted\n          open={Boolean(create)}\n          onClose={() => setCreate(null)}\n        >\n          <MenuItem onClick={handleClickUserCreation}>Пользователь</MenuItem>\n          <UserForm\n            isCreation={true}\n            open={userCreation}\n            changeHandler={value => setUserCreation(value)}\n            addHandler={addUserHandler}\n          />\n          <MenuItem onClick={handleClickRoomCreation}>Помещение</MenuItem>\n          <RoomForm\n            isCreation={true}\n            open={roomCreation}\n            changeHandler={value => setRoomCreation(value)}\n            addHandler={addRoomHandler}\n          />\n        </Menu>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setEdit(event.currentTarget)}\n        >\n          Редактирование\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={edit}\n          keepMounted\n          open={Boolean(edit)}\n          onClose={() => setEdit(null)}\n        >\n          <MenuItem\n            onClick={useCallback(() => {\n              setEdit(null);\n              history.push('/users');\n            }, [history])}\n          >\n            Пользователь\n          </MenuItem>\n          <MenuItem\n            onClick={useCallback(() => {\n              setEdit(null);\n              history.push('/rooms');\n            }, [history])}\n          >\n            Помещение\n          </MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport MainPage from './views/MainPage/MainPage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport EntityListView from './views/EntityListView/EntityListView';\nimport Header from './Header/Header';\nimport api from './api';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(async () => {\n    api.users.get().then(items => setUsers(items));\n    api.rooms.get().then(items => setRooms(items));\n  }, []);\n\n  function deleteUserHandler(id) {\n    let isConfirmed = confirm('Удалить пользователя?');\n    if (isConfirmed) {\n      api.user\n        .delete(id)\n        .then(deletedItem => setUsers(users.filter(item => item.id !== deletedItem.id)));\n    }\n  }\n\n  function deleteRoomHandler(id) {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      api.room\n        .delete(id)\n        .then(deletedItem => setRooms(rooms.filter(item => item.id !== deletedItem.id)));\n    }\n  }\n\n  function updateUserHandler(user) {\n    setUsers(\n      users.map(u => {\n        if (u.id === user.id) {\n          u.login = user.login;\n          u.password = user.password;\n          u.isAdmin = user.isAdmin;\n        }\n        return u;\n      })\n    );\n  }\n\n  function updateRoomHandler(room) {\n    setRooms(\n      rooms.map(r => {\n        if (r.id === room.id) {\n          r.name = room.name;\n        }\n        return r;\n      })\n    );\n  }\n\n  function addUserHandler(user) {\n    users.push(user);\n    setUsers([...users]);\n  }\n\n  function addRoomHandler(room) {\n    rooms.push(room);\n    setUsers([...rooms]);\n  }\n\n  return (\n    <Router>\n      <Header addUserHandler={addUserHandler} addRoomHandler={addRoomHandler} />\n      <Switch>\n        <Route exact path=\"/\" component={() => <MainPage rooms={rooms} />} />\n        <Route\n          exact\n          path=\"/users\"\n          component={() => (\n            <EntityListView\n              items={users}\n              fieldForSearching=\"login\"\n              title=\"Пользователи\"\n              deleteHandler={deleteUserHandler}\n              updateHandler={updateUserHandler}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/rooms\"\n          component={() => (\n            <EntityListView\n              items={rooms}\n              fieldForSearching=\"name\"\n              title=\"Помещения\"\n              deleteHandler={deleteRoomHandler}\n              updateHandler={updateRoomHandler}\n            />\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}