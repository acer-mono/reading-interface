{"version":3,"sources":["Chart/Chart.js","api.js","ReadingForm/ReadingForm.js","CurrentReading/CurrentReading.js","views/CurrentReadingView/CurrentReadingView.js","views/ChooseRoomView/ChooseRoomView.js","views/MainPage/MainPage.js","UserForm/UserForm.js","redux/actions/rooms.js","RoomForm/RoomForm.js","Entity/Entity.js","EntityList/EntityList.js","SearchString/SearchString.js","views/EntityListView/EntityListView.js","PrintPlot/PrintPlot.js","PrintTable/PrintTable.js","Header/Header.js","App.js","reportWebVitals.js","redux/reducers/rooms.js","redux/index.js","redux/reducers/index.js","index.js"],"names":["useStyles","makeStyles","custom","border","boxShadow","Chart","data","title","axisName","yAxis","theme","useTheme","classes","Card","className","CardHeader","titleTypographyProps","color","CardContent","ResponsiveContainer","width","height","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","YAxis","Label","angle","position","style","textAnchor","fill","primary","Line","type","main","dot","URL","defaultHeaders","Authorization","plotHeaders","handleErrors","response","a","json","status","Error","message","handleBinaryFilesErrors","api","users","get","fetch","method","headers","then","user","post","login","password","isAdmin","body","JSON","stringify","is_admin","put","id","delete","rooms","room","name","reading","temperature","humidity","readings","from","to","plot","toISOString","split","table","format","toLocaleDateString","validationSchema","yup","required","buttons","spacing","input","ReadingForm","open","changeHandler","updateReading","updateReadingList","useState","error","setError","styles","formik","useFormik","initialValues","onSubmit","values","catch","e","Dialog","aria-labelledby","DialogTitle","Alert","severity","handleSubmit","DialogContent","TextField","fullWidth","variant","label","value","onChange","handleChange","touched","Boolean","errors","helperText","InputLabelProps","shrink","inputProps","step","min","DialogActions","Button","onClick","CurrentReading","setOpen","Typography","component","CardActions","href","CurrentReadingView","Grid","container","direction","justify","item","ChooseRoomView","setRoomHandler","FormControl","InputLabel","Select","labelId","map","MenuItem","layout","breakpoints","up","marginLeft","marginRight","paper","marginTop","marginBottom","padding","stepper","display","justifyContent","button","MainPage","steps","roomId","setRoomId","undefined","current","setCurrent","setTemperature","setHumidity","React","activeStep","setActiveStep","Paper","align","Stepper","Step","StepLabel","Fragment","length","gutterBottom","target","isUpdate","currentDay","moment","date","el","Date","push","getStepContent","console","log","finally","UserForm","isCreation","updateHandler","addHandler","FormControlLabel","control","Checkbox","defaultChecked","roomsActionTypes","payload","clearError","load","list","remove","RoomForm","dispatch","useDispatch","useSelector","store","multiline","rows","aria-label","Entity","fieldForRendering","deleteHandler","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","IconButton","edge","EntityList","items","List","maxHeight","overflowY","root","alignItems","flex","iconButton","SearchString","filterItems","changeValue","InputBase","placeholder","defaultValue","event","EntityListView","fieldForSearching","filter","changeFilter","includes","PLOT_TYPES","h","t","th","PrintPlot","changeState","download","useRef","res","blob","window","createObjectURL","url","click","Object","entries","key","utils","DateFnsUtils","disableToolbar","clearable","val","setFieldValue","KeyboardButtonProps","isValid","dirty","ref","TABLE_FORMATS","pdf","xlsx","csv","PrintTable","appBar","menuButton","background","outline","textTransform","Header","addUserHandler","addRoomHandler","history","useHistory","print","setPrint","create","setCreate","edit","setEdit","openPrintPlot","setOpenPrintPlot","openPrintTable","setOpenPrintTable","userCreation","setUserCreation","roomCreation","setRoomCreation","AppBar","Toolbar","useCallback","fontSize","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","onClose","App","setUsers","setRooms","deleteUserHandler","confirm","deletedItem","updateUserHandler","u","updateRoomHandler","r","useEffect","exact","path","removeAsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","roomsInitialStore","roomsReducer","state","action","rootReducer","combineReducers","createRootReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769c37e9.chunk.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport { Card, CardHeader, CardContent, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  custom: {\n    border: 'none',\n    boxShadow: 'none'\n  }\n});\n\nexport default function Chart({ data, title, axisName, yAxis }) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.custom}>\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title={title} />\n      <CardContent>\n        <ResponsiveContainer width=\"100%\" height={260}>\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24\n            }}\n          >\n            <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n              >\n                {axisName}\n              </Label>\n            </YAxis>\n            <Line type=\"monotone\" dataKey={yAxis} stroke={theme.palette.primary.main} dot={true} />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","const URL = 'https://vki.pythonanywhere.com';\n\nconst defaultHeaders = {\n  'Content-Type': 'application/json',\n  Authorization:\n    'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTYyMTA2OTM3MiwianRpIjoiMjFhMTI1MGEtZDFlOC00OTc2LWIwMjQtYWNmZTMwNzM5YjNkIiwibmJmIjoxNjIxMDY5MzcyLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjoiNCIsImV4cCI6MTYyMTY3NDE3Mn0.h1v4dYEWlRxi61c8ijBzjrgvbbK0JrNQ8eZFN0dcvK8'\n};\nconst plotHeaders = {\n  Authorization:\n    'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTYyMTA2OTM3MiwianRpIjoiMjFhMTI1MGEtZDFlOC00OTc2LWIwMjQtYWNmZTMwNzM5YjNkIiwibmJmIjoxNjIxMDY5MzcyLCJ0eXBlIjoiYWNjZXNzIiwic3ViIjoiNCIsImV4cCI6MTYyMTY3NDE3Mn0.h1v4dYEWlRxi61c8ijBzjrgvbbK0JrNQ8eZFN0dcvK8'\n};\n\nasync function handleErrors(response) {\n  const data = await response.json();\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nasync function handleBinaryFilesErrors(response) {\n  const data = await response;\n  if (response.status !== 200) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nconst api = {\n  users: {\n    get: () =>\n      fetch(`${URL}/users`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  user: {\n    post: ({ login, password, isAdmin }) =>\n      fetch(`${URL}/user`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    put: ({ id, login, password, isAdmin }) =>\n      fetch(`${URL}/user`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          login,\n          password,\n          is_admin: isAdmin\n        })\n      }).then(handleErrors),\n\n    delete: id =>\n      fetch(`${URL}/user`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  rooms: {\n    get: () =>\n      fetch(`${URL}/rooms`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  room: {\n    post: name =>\n      fetch(`${URL}/room`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          name\n        })\n      }).then(handleErrors),\n    put: ({ id, name }) =>\n      fetch(`${URL}/room`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id,\n          name\n        })\n      }).then(handleErrors),\n    delete: id =>\n      fetch(`${URL}/room`, {\n        method: 'DELETE',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          id\n        })\n      }).then(handleErrors)\n  },\n  reading: {\n    get: room =>\n      fetch(`${URL}/reading?room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors),\n    post: ({ temperature, humidity, room }) =>\n      fetch(`${URL}/reading`, {\n        method: 'POST',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors),\n    put: ({ temperature, humidity, room }) =>\n      fetch(`${URL}/reading`, {\n        method: 'PUT',\n        headers: defaultHeaders,\n        body: JSON.stringify({\n          temperature,\n          humidity,\n          room\n        })\n      }).then(handleErrors)\n  },\n  readings: {\n    get: (room, from, to) =>\n      fetch(`${URL}/readings?from=${from}&to=${to}&room=${room}`, {\n        method: 'GET',\n        headers: defaultHeaders\n      }).then(handleErrors)\n  },\n  plot: {\n    get: ({ from, to, room, type }) =>\n      fetch(\n        `${URL}/plot?from=${from.toISOString().split('T')[0]}&to=${\n          to.toISOString().split('T')[0]\n        }&room=${room}&type=${type}`,\n        {\n          method: 'GET',\n          headers: plotHeaders\n        }\n      ).then(handleBinaryFilesErrors)\n  },\n  table: {\n    get: ({ format, from, to, room }) =>\n      fetch(\n        `${URL}/table?from=${from.toLocaleDateString()}&to=${to.toLocaleDateString()}&room=${room}&format=${format}`,\n        {\n          method: 'GET',\n          headers: plotHeaders\n        }\n      ).then(handleBinaryFilesErrors)\n  }\n};\n\nexport default api;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as yup from 'yup';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport { Alert } from '@material-ui/lab';\n\nconst validationSchema = yup.object({\n  temperature: yup.number().required('Поле обязательно'),\n  humidity: yup.number().required('Поле обязательно')\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction ReadingForm({ open, changeHandler, reading, room, updateReading, updateReadingList }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n\n  const formik = useFormik({\n    initialValues: {\n      temperature: reading ? reading.temperature : 0,\n      humidity: reading ? reading.humidity : 0\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (!reading) {\n        api.reading\n          .post({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, false);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.reading\n          .put({ room, ...values })\n          .then(reading => {\n            updateReadingList(reading, true);\n            updateReading(reading);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {reading && 'Изменениe'}\n          {!reading && 'Добавление'} показаний\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              className={styles.input}\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"temperature\"\n              name=\"temperature\"\n              label=\"Температура\"\n              type=\"number\"\n              value={formik.values.temperature}\n              onChange={formik.handleChange}\n              error={formik.touched.temperature && Boolean(formik.errors.temperature)}\n              helperText={formik.touched.temperature && formik.errors.temperature}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1\n              }}\n            />\n            <TextField\n              margin=\"dense\"\n              fullWidth\n              variant=\"outlined\"\n              id=\"humidity\"\n              name=\"humidity\"\n              label=\"Влажность\"\n              type=\"number\"\n              value={formik.values.humidity}\n              onChange={formik.handleChange}\n              error={formik.touched.humidity && Boolean(formik.errors.humidity)}\n              helperText={formik.touched.humidity && formik.errors.humidity}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 0.1,\n                min: 0\n              }}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {reading && 'Сохранить'}\n              {!reading && 'Добавить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ReadingForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Card, CardContent, CardActions, CardHeader } from '@material-ui/core';\nimport ReadingForm from '../ReadingForm/ReadingForm';\n\nexport default function CurrentReading({ reading, room, updateReading, updateReadingList }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader titleTypographyProps={{ color: 'primary' }} title=\"Текущие показания:\" />\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Температура:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.temperature}℃`}\n          {!reading && '-'}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          Влажность:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h3\" color=\"textSecondary\">\n          {reading && `${reading.humidity}%`}\n          {!reading && '-'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button color=\"primary\" href=\"#\" onClick={() => setOpen(true)}>\n          {reading && 'Изменить'}\n          {!reading && 'Добавить'}\n        </Button>\n        <ReadingForm\n          room={room}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          reading={reading}\n          updateReading={updateReading}\n          updateReadingList={updateReadingList}\n        />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Chart from '../../Chart/Chart';\nimport CurrentReading from '../../CurrentReading/CurrentReading';\nimport { Grid } from '@material-ui/core';\n\nfunction CurrentReadingView({\n  reading,\n  room,\n  updateReading,\n  temperature,\n  humidity,\n  updateReadingList\n}) {\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"space-between\">\n        <Grid item>\n          <Chart\n            title=\"Температура\"\n            axisName=\"Температура(℃)\"\n            data={temperature}\n            yAxis=\"temperature\"\n          />\n          <Chart title=\"Влажность\" axisName=\"Влажность(%)\" data={humidity} yAxis=\"humidity\" />\n        </Grid>\n        <Grid item>\n          <CurrentReading\n            reading={reading}\n            room={room}\n            updateReadingList={updateReadingList}\n            updateReading={updateReading}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default CurrentReadingView;\n","import React from 'react';\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\nfunction ChooseRoomView({ rooms, setRoomHandler }) {\n  return (\n    <>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"room-label\">Помещение</InputLabel>\n        <Select labelId=\"room-label\" id=\"Room\" label=\"Помещение\" onChange={setRoomHandler}>\n          {rooms.map(room => (\n            <MenuItem key={room.id} value={room.id}>\n              {room.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n\nexport default ChooseRoomView;\n","import React, { useState } from 'react';\nimport { Typography, Paper, Stepper, StepLabel, Step, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CurrentReadingView from '../CurrentReadingView/CurrentReadingView';\nimport ChooseRoomView from '../ChooseRoomView/ChooseRoomView';\nimport api from '../../api';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(900 + theme.spacing(2) * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MainPage({ rooms }) {\n  const classes = useStyles();\n  const steps = ['Выбор помещения', 'Ввод данных'];\n  const [roomId, setRoomId] = useState('');\n  const [current, setCurrent] = useState(undefined);\n  const [temperature, setTemperature] = useState([]);\n  const [humidity, setHumidity] = useState([]);\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    console.log(roomId);\n    api.reading\n      .get(roomId)\n      .then(reading => {\n        setCurrent(reading);\n      })\n      .catch(() => {\n        setCurrent(undefined);\n      })\n      .finally(() => {\n        api.readings.get(roomId, new Date() - 7, new Date()).then(readings => {\n          setTemperature(\n            readings.map(reading => {\n              return {\n                date: moment(reading.date).format('DD.MM'),\n                temperature: reading.temperature\n              };\n            })\n          );\n          setHumidity(\n            readings.map(reading => {\n              return { date: moment(reading.date).format('DD.MM'), humidity: reading.humidity };\n            })\n          );\n        });\n        setActiveStep(activeStep + 1);\n      });\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <ChooseRoomView\n            rooms={rooms}\n            setRoomHandler={room => {\n              setRoomId(room.target.value);\n              setCurrent(undefined);\n            }}\n          />\n        );\n      case 1:\n        return (\n          <CurrentReadingView\n            reading={current}\n            room={roomId}\n            updateReading={value => setCurrent(value)}\n            temperature={temperature}\n            humidity={humidity}\n            updateReadingList={(value, isUpdate) => {\n              if (isUpdate) {\n                const currentDay = moment(current.date).format('DD.MM');\n                setHumidity(\n                  humidity.map(el => {\n                    if (el.date === currentDay) {\n                      el.humidity = value.humidity;\n                    }\n                    return el;\n                  })\n                );\n                setTemperature(\n                  temperature.map(el => {\n                    if (el.date === currentDay) {\n                      el.temperature = value.temperature;\n                    }\n                    return el;\n                  })\n                );\n              } else {\n                const currentDay = moment(new Date()).format('DD.MM');\n                humidity.push({ date: currentDay, humidity: value.humidity });\n                setHumidity([...humidity]);\n                temperature.push({ date: currentDay, temperature: value.temperature });\n                setTemperature([...temperature]);\n              }\n            }}\n          />\n        );\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Журнал учёта температурно-влажностного режима\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Назад\n                    </Button>\n                  )}\n                  {activeStep === 0 && roomId && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      Вперед\n                    </Button>\n                  )}\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default MainPage;\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Alert from '@material-ui/lab/Alert';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport api from '../api';\n\nconst validationSchema = yup.object({\n  login: yup.string('Введите логин').required('Логин обязателен'),\n  password: yup\n    .string('Введите пароль')\n    .min(8, 'Минимальная длина пароля - 8 символов')\n    .required('Пароль обязателен'),\n  isAdmin: yup.bool(false)\n});\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nfunction UserForm({ open, changeHandler, isCreation, user, updateHandler, addHandler }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      login: user ? user.login : '',\n      password: user ? user.password : '',\n      isAdmin: user ? user.isAdmin : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      if (isCreation) {\n        api.user\n          .post(values)\n          .then(user => {\n            addHandler(user);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      } else {\n        api.user\n          .put({ id: user.id, ...values })\n          .then(user => {\n            updateHandler(user);\n            changeHandler(false);\n          })\n          .catch(e => {\n            setError(e.message);\n          });\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} пользователя\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              variant=\"outlined\"\n              className={styles.input}\n              margin=\"dense\"\n              id=\"login\"\n              name=\"login\"\n              label=\"Логин\"\n              type=\"text\"\n              value={formik.values.login}\n              onChange={formik.handleChange}\n              error={formik.touched.login && Boolean(formik.errors.login)}\n              helperText={formik.touched.login && formik.errors.login}\n              fullWidth\n            />\n            <TextField\n              className={styles.input}\n              variant=\"outlined\"\n              margin=\"dense\"\n              id=\"password\"\n              name=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n              fullWidth\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"isAdmin\"\n                  color=\"primary\"\n                  defaultChecked={formik.values.isAdmin}\n                  onChange={formik.handleChange}\n                />\n              }\n              label=\"Администратор\"\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                changeHandler(false);\n                setError('');\n              }}\n            >\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UserForm;\n","import api from '../../api';\n\nexport const roomsActionTypes = {\n  edit: 'rooms/edit',\n  add: 'rooms/add',\n  delete: 'rooms/delete',\n  loadList: 'rooms/load',\n  setError: 'rooms/setError',\n  clearError: 'rooms/clearError'\n};\n\nexport const setError = error => ({\n  type: roomsActionTypes.setError,\n  payload: error\n});\n\nexport const clearError = () => ({\n  type: roomsActionTypes.clearError\n});\n\nexport const load = list => ({\n  type: roomsActionTypes.loadList,\n  payload: list\n});\n\nexport const remove = id => ({\n  type: roomsActionTypes.delete,\n  payload: id\n});\n\nexport const edit = item => ({\n  type: roomsActionTypes.edit,\n  payload: item\n});\n\nexport const add = room => ({\n  type: roomsActionTypes.add,\n  payload: room\n});\n\nexport const editAsync = value => async dispatch => {\n  try {\n    dispatch(clearError());\n    await api.room.put(value);\n    dispatch(edit(value));\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const addAsync = name => async dispatch => {\n  try {\n    dispatch(clearError());\n    const item = await api.room.post(name);\n    dispatch(add(item));\n  } catch (e) {\n    dispatch(setError(e.message));\n  }\n};\n\nexport const loadAsync = () => async dispatch => {\n  try {\n    const list = await api.rooms.get();\n    dispatch(load(list));\n  } catch (e) {\n    console.log('Error load');\n  }\n};\n\nexport const removeAsync = id => async dispatch => {\n  try {\n    let isConfirmed = confirm('Удалить помещение?');\n    if (isConfirmed) {\n      await api.room.delete(id);\n      dispatch(remove(id));\n    }\n  } catch (e) {\n    console.log('Error remove');\n  }\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAsync, editAsync } from '../redux/actions/rooms';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst validationSchema = yup.object({\n  name: yup.string('Введите название помещения').required('Название не может быт пустым')\n});\n\nfunction RoomForm({ open, isCreation, room, changeHandler }) {\n  const dispatch = useDispatch();\n  const error = useSelector(store => store.rooms.error);\n  const styles = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      name: room ? room.name : ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (isCreation) {\n        dispatch(addAsync(values.name));\n      } else {\n        dispatch(editAsync({ id: room.id, name: values.name }));\n      }\n      if (!useSelector(store => store.rooms.error)) {\n        changeHandler();\n      }\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          {isCreation && 'Создание'}\n          {!isCreation && 'Изменение'} помещения\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <TextField\n              multiline\n              rows={5}\n              id=\"name\"\n              label=\"Название помещения\"\n              name=\"name\"\n              variant=\"outlined\"\n              fullWidth\n              aria-label=\"empty textarea\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeHandler(false)}>\n              Отмена\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              {isCreation && 'Создать'}\n              {!isCreation && 'Сохранить'}\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RoomForm;\n","import React, { useState } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\n\nfunction Entity({ item, fieldForRendering, deleteHandler, updateHandler }) {\n  const [open, setOpen] = useState();\n  return (\n    <ListItem>\n      {fieldForRendering === 'login' && (\n        <UserForm\n          isCreation={false}\n          user={item}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          updateHandler={updateHandler}\n        />\n      )}\n      {fieldForRendering === 'name' && (\n        <RoomForm\n          isCreation={false}\n          room={item}\n          open={open}\n          changeHandler={value => setOpen(value)}\n          updateHandler={updateHandler}\n        />\n      )}\n      <ListItemAvatar>\n        <Avatar>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={item[fieldForRendering]} />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => setOpen(true)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteHandler(item.id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Entity;\n","import React from 'react';\nimport Entity from '../Entity/Entity';\nimport { List, Typography } from '@material-ui/core';\n\nfunction EntityList({ items, fieldForRendering, deleteHandler, updateHandler }) {\n  if (items.length === 0) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        Ничего не найдено\n      </Typography>\n    );\n  } else {\n    return (\n      <List style={{ maxHeight: '60vh', overflowY: 'scroll' }}>\n        {items.map(item => (\n          <Entity\n            item={item}\n            key={item.id}\n            fieldForRendering={fieldForRendering}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default EntityList;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\n\nfunction SearchString({ filterItems }) {\n  const classes = useStyles();\n  const [value, changeValue] = useState();\n\n  function changeHandler(event) {\n    filterItems(event.target.value);\n    changeValue(event.target.value);\n  }\n\n  return (\n    <Paper variant=\"outlined\" component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Введите данные для поиска\"\n        inputProps={{ 'aria-label': 'Введите данные для поиска' }}\n        defaultValue={value}\n        onChange={changeHandler}\n      />\n      <SearchIcon color=\"disabled\" className={classes.iconButton} />\n    </Paper>\n  );\n}\n\nexport default SearchString;\n","import React, { useState } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EntityList from '../../EntityList/EntityList';\nimport SearchString from '../../SearchString/SearchString';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    border: 'none',\n    boxShadow: 'none'\n  }\n}));\n\nfunction EntityListView({ items, fieldForSearching, title, deleteHandler, updateHandler }) {\n  const classes = useStyles();\n  const [filter, changeFilter] = useState('');\n\n  function changeFilterHandler(value) {\n    changeFilter(value);\n  }\n\n  return (\n    <>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            {title}\n          </Typography>\n          <SearchString filterItems={changeFilterHandler} />\n          <EntityList\n            items={items.filter(el => el[fieldForSearching].includes(filter))}\n            fieldForRendering={fieldForSearching}\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n          />\n        </Paper>\n      </main>\n    </>\n  );\n}\n\nexport default EntityListView;\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst PLOT_TYPES = {\n  h: 'Влажность',\n  t: 'Температура',\n  th: 'Общий'\n};\n\nconst validationSchema = yup.object({\n  type: yup.string('Выберите тип').required('Тип обязателен'),\n  room: yup.string('Выберите помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintPlot({ open, changeState }) {\n  const styles = useStyles();\n  const [error, setError] = useState('');\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const formik = useFormik({\n    initialValues: {\n      type: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.plot\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = 'plot.png';\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать графика\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                id=\"room\"\n                label=\"Помещение\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Тип</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                id=\"type\"\n                label=\"Тип\"\n                name=\"type\"\n                value={formik.values.type}\n                onChange={formik.handleChange}\n                error={formik.touched.type && Boolean(formik.errors.type)}\n                helperText={formik.touched.type && formik.errors.type}\n              >\n                {Object.entries(PLOT_TYPES).map(([key, value]) => (\n                  <MenuItem key={key} value={key}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  label=\"Окончание наблюдений\"\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintPlot;\n","import React, { useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormControl, InputLabel, Select, MenuItem, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport api from '../api';\nimport { useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    margin: theme.spacing(0, 2, 2, 2)\n  },\n  input: {\n    margin: theme.spacing(0, 0, 2, 0)\n  }\n}));\n\nconst TABLE_FORMATS = {\n  pdf: 'pdf',\n  xlsx: 'xlsx',\n  csv: 'csv'\n};\n\nconst validationSchema = yup.object({\n  format: yup.string('Выберете формат').required('Формат обязателен'),\n  room: yup.string('Выберете помещение').required('Помещение обязательно'),\n  from: yup.date().required('Дата начала наблюдений обязательна'),\n  to: yup.date().required('Дата начала окончания обязательна')\n});\n\nfunction PrintTable({ open, changeState }) {\n  const [error, setError] = useState('');\n  const styles = useStyles();\n  const download = useRef();\n  const rooms = useSelector(store => store.rooms.list);\n  const formik = useFormik({\n    initialValues: {\n      format: '',\n      room: '',\n      from: null,\n      to: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setError('');\n      api.table\n        .get(values)\n        .then(res => res.blob())\n        .then(blob => window.URL.createObjectURL(blob))\n        .then(url => {\n          download.current.href = url;\n          download.current.download = `table.${formik.values.format}`;\n          download.current.click();\n          changeState(false);\n        })\n        .catch(e => setError(e.message));\n    }\n  });\n  return (\n    <div>\n      <Dialog aria-labelledby=\"form-dialog-title\" open={open}>\n        <DialogTitle id=\"form-dialog-title\">\n          Печать таблицы\n          {error && <Alert severity=\"error\">{error}</Alert>}\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <FormControl variant=\"outlined\" fullWidth className={styles.input}>\n              <InputLabel id=\"room-label\">Помещение</InputLabel>\n              <Select\n                labelId=\"room-label\"\n                label=\"Помещение\"\n                id=\"room\"\n                name=\"room\"\n                value={formik.values.room}\n                onChange={formik.handleChange}\n                error={formik.touched.room && Boolean(formik.errors.room)}\n                helperText={formik.touched.room && formik.errors.room}\n              >\n                {rooms.map(room => (\n                  <MenuItem key={room.id} value={room.id}>\n                    {room.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"select-outlined-label\">Формат</InputLabel>\n              <Select\n                labelId=\"select-outlined-label\"\n                label=\"Формат\"\n                id=\"format\"\n                name=\"format\"\n                value={formik.values.format}\n                onChange={formik.handleChange}\n                error={formik.touched.format && Boolean(formik.errors.format)}\n                helperText={formik.touched.format && formik.errors.format}\n              >\n                {Object.entries(TABLE_FORMATS).map(([key, value]) => (\n                  <MenuItem key={key} value={value}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-between\">\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Начало наблюдений\"\n                  id=\"from\"\n                  name=\"from\"\n                  clearable\n                  value={formik.values.from}\n                  onChange={val => {\n                    formik.setFieldValue('from', val);\n                  }}\n                  error={formik.touched.from && Boolean(formik.errors.from)}\n                  helperText={formik.touched.from && formik.errors.from}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n                <KeyboardDatePicker\n                  fullWidth\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"dd.MM.yyyy\"\n                  margin=\"normal\"\n                  label=\"Окончание наблюдений\"\n                  id=\"to\"\n                  name=\"to\"\n                  clearable\n                  value={formik.values.to}\n                  onChange={val => {\n                    formik.setFieldValue('to', val);\n                  }}\n                  error={formik.touched.to && Boolean(formik.errors.to)}\n                  helperText={formik.touched.to && formik.errors.to}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date'\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </DialogContent>\n          <DialogActions className={styles.buttons}>\n            <Button color=\"primary\" onClick={() => changeState(false)}>\n              Отмена\n            </Button>\n            {formik.isValid && formik.dirty && (\n              <>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Печать\n                </Button>\n                <a ref={download}></a>\n              </>\n            )}\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PrintTable;\n","import React, { useCallback } from 'react';\nimport { AppBar, Button, IconButton, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrintPlot from '../PrintPlot/PrintPlot';\nimport PrintTable from '../PrintTable/PrintTable';\nimport UserForm from '../UserForm/UserForm';\nimport RoomForm from '../RoomForm/RoomForm';\nimport { useHistory } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    position: 'relative'\n  },\n  menuButton: {\n    background: 'none',\n    border: 'none',\n    outline: 'none',\n    color: 'white',\n    textTransform: 'uppercase'\n  }\n}));\n\nfunction Header({ addUserHandler, addRoomHandler }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [print, setPrint] = React.useState(null);\n  const [create, setCreate] = React.useState(null);\n  const [edit, setEdit] = React.useState(null);\n  const [openPrintPlot, setOpenPrintPlot] = React.useState(false);\n  const [openPrintTable, setOpenPrintTable] = React.useState(false);\n  const [userCreation, setUserCreation] = React.useState(false);\n  const [roomCreation, setRoomCreation] = React.useState(false);\n\n  const handleClickOpenPrintPlot = () => {\n    setPrint(null);\n    setOpenPrintPlot(true);\n  };\n\n  const handleClickOpenPrintTable = () => {\n    setPrint(null);\n    setOpenPrintTable(true);\n  };\n\n  const handleClickUserCreation = () => {\n    setCreate(null);\n    setUserCreation(true);\n  };\n\n  const handleClickRoomCreation = () => {\n    setCreate(null);\n    setRoomCreation(true);\n  };\n\n  return (\n    <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton onClick={useCallback(() => history.push('/'), [history])}>\n          <HomeIcon style={{ color: 'white' }} fontSize=\"large\" />\n        </IconButton>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setPrint(event.currentTarget)}\n        >\n          Печать\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={print}\n          keepMounted\n          open={Boolean(print)}\n          onClose={() => setPrint(null)}\n        >\n          <MenuItem onClick={handleClickOpenPrintTable}>Таблица</MenuItem>\n          <PrintTable open={openPrintTable} changeState={value => setOpenPrintTable(value)} />\n          <MenuItem onClick={handleClickOpenPrintPlot}>График</MenuItem>\n          <PrintPlot open={openPrintPlot} changeState={value => setOpenPrintPlot(value)} />\n        </Menu>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setCreate(event.currentTarget)}\n        >\n          Создание\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={create}\n          keepMounted\n          open={Boolean(create)}\n          onClose={() => setCreate(null)}\n        >\n          <MenuItem onClick={handleClickUserCreation}>Пользователь</MenuItem>\n          <UserForm\n            isCreation={true}\n            open={userCreation}\n            changeHandler={value => setUserCreation(value)}\n            addHandler={addUserHandler}\n          />\n          <MenuItem onClick={handleClickRoomCreation}>Помещение</MenuItem>\n          <RoomForm\n            isCreation={true}\n            open={roomCreation}\n            changeHandler={value => setRoomCreation(value)}\n            addHandler={addRoomHandler}\n          />\n        </Menu>\n        <Button\n          classes={{\n            root: classes.menuButton\n          }}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={event => setEdit(event.currentTarget)}\n        >\n          Редактирование\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={edit}\n          keepMounted\n          open={Boolean(edit)}\n          onClose={() => setEdit(null)}\n        >\n          <MenuItem\n            onClick={useCallback(() => {\n              setEdit(null);\n              history.push('/users');\n            }, [history])}\n          >\n            Пользователь\n          </MenuItem>\n          <MenuItem\n            onClick={useCallback(() => {\n              setEdit(null);\n              history.push('/rooms');\n            }, [history])}\n          >\n            Помещение\n          </MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport MainPage from './views/MainPage/MainPage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport EntityListView from './views/EntityListView/EntityListView';\nimport Header from './Header/Header';\nimport api from './api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadAsync, removeAsync } from './redux/actions/rooms';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [, setRooms] = useState([]);\n  const dispatch = useDispatch();\n  const rooms = useSelector(store => store.rooms.list);\n\n  useEffect(async () => {\n    dispatch(loadAsync());\n  }, []);\n\n  function deleteUserHandler(id) {\n    let isConfirmed = confirm('Удалить пользователя?');\n    if (isConfirmed) {\n      api.user\n        .delete(id)\n        .then(deletedItem => setUsers(users.filter(item => item.id !== deletedItem.id)));\n    }\n  }\n\n  function updateUserHandler(user) {\n    setUsers(\n      users.map(u => {\n        if (u.id === user.id) {\n          u.login = user.login;\n          u.password = user.password;\n          u.isAdmin = user.isAdmin;\n        }\n        return u;\n      })\n    );\n  }\n\n  function updateRoomHandler(room) {\n    setRooms(\n      rooms.map(r => {\n        if (r.id === room.id) {\n          r.name = room.name;\n        }\n        return r;\n      })\n    );\n  }\n\n  function addUserHandler(user) {\n    users.push(user);\n    setUsers([...users]);\n  }\n\n  function addRoomHandler(room) {\n    rooms.push(room);\n    setUsers([...rooms]);\n  }\n\n  return (\n    <Router>\n      <Header addUserHandler={addUserHandler} addRoomHandler={addRoomHandler} />\n      <Switch>\n        <Route exact path=\"/\" component={() => <MainPage rooms={rooms} />} />\n        <Route\n          exact\n          path=\"/users\"\n          component={() => (\n            <EntityListView\n              items={users}\n              fieldForSearching=\"login\"\n              title=\"Пользователи\"\n              deleteHandler={deleteUserHandler}\n              updateHandler={updateUserHandler}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/rooms\"\n          component={() => (\n            <EntityListView\n              items={rooms}\n              fieldForSearching=\"name\"\n              title=\"Помещения\"\n              deleteHandler={id => dispatch(removeAsync(id))}\n              updateHandler={updateRoomHandler}\n            />\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { roomsActionTypes } from '../actions/rooms';\n\nexport const roomsInitialStore = {\n  list: []\n};\n\nexport function roomsReducer(state = roomsInitialStore, action) {\n  switch (action.type) {\n    case roomsActionTypes.loadList: {\n      return { ...state, list: action.payload };\n    }\n    case roomsActionTypes.delete: {\n      return {\n        ...state,\n        list: [...state.list.filter(el => el.id !== action.payload)]\n      };\n    }\n    case roomsActionTypes.add: {\n      return {\n        ...state,\n        list: [...state.list, action.payload]\n      };\n    }\n    case roomsActionTypes.edit: {\n      return {\n        ...state,\n        list: [\n          ...state.list.map(item => {\n            if (item.id === action.payload.id) {\n              item = action.payload;\n            }\n            return item;\n          })\n        ]\n      };\n    }\n    case roomsActionTypes.clearError: {\n      return {\n        ...state,\n        error: ''\n      };\n    }\n    case roomsActionTypes.setError: {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { roomsInitialStore } from './reducers/rooms';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createRootReducer from './reducers';\n\nexport const initialState = {\n  rooms: roomsInitialStore\n};\n\nexport const rootReducer = createRootReducer();\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport { roomsReducer } from './rooms';\n\nconst createRootReducer = () =>\n  combineReducers({\n    rooms: roomsReducer\n  });\n\nexport default createRootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}